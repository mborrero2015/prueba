*** ADVERTENCIA *** ¡NO MODIFIQUE ESTE ARCHIVO DE NINGUNA FORMA! *** ADVERTENCIA ***

**__RI_HEADER!@ Do NOT REMOVE or MODIFY this line!!!! @!__RI_HEADER**
procedure RIDELETE
local llRetVal
llRetVal=.t.
 IF (ISRLOCKED() and !deleted()) OR !RLOCK()
    llRetVal=.F.
  ELSE
    IF !deleted()
      DELETE
      IF CURSORGETPROP('BUFFERING') > 1
      	=TABLEUPDATE()
      ENDIF
      llRetVal=pnerror=0
    ENDIF not already deleted
  ENDIF
  UNLOCK RECORD (RECNO())
RETURN llRetVal

procedure RIUPDATE
lparameters tcFieldName,tcNewValue,tcCascadeParent
local llRetVal
llRetVal=.t.
 IF ISRLOCKED() OR !RLOCK()
    llRetVal=.F.
  ELSE
    IF EVAL(tcFieldName)<>tcNewValue
      PRIVATE pcCascadeParent
      pcCascadeParent=upper(iif(type("tcCascadeParent")<>"C","",tcCascadeParent))
      REPLACE (tcFieldName) WITH tcNewValue
      IF CURSORGETPROP('BUFFERING') > 1
      	=TABLEUPDATE()
      ENDIF
      llRetVal=pnerror=0
    ENDIF values don't already match
  ENDIF it's locked already, or I was able to lock it
  UNLOCK RECORD (RECNO())
return llRetVal

procedure rierror
parameters tnErrNo,tcMessage,tcCode,tcProgram
local lnErrorRows,lnXX
lnErrorRows=alen(gaErrors,1)
if type('gaErrors[lnErrorRows,1]')<>"L"
  dimension gaErrors[lnErrorRows+1,alen(gaErrors,2)]
  lnErrorRows=lnErrorRows+1
endif
gaErrors[lnErrorRows,1]=tnErrNo
gaErrors[lnErrorRows,2]=tcMessage
gaErrors[lnErrorRows,3]=tcCode
gaErrors[lnErrorRows,4]=""
lnXX=1
do while !empty(program(lnXX))
  gaErrors[lnErrorRows,4]=gaErrors[lnErrorRows,4]+","+;
  program(lnXX)
  lnXX=lnXX+1
enddo
gaErrors[lnErrorRows,5]=pcParentDBF
gaErrors[lnErrorRows,6]=pnParentRec
gaErrors[lnErrorRows,7]=pcParentID
gaErrors[lnErrorRows,8]=pcParentExpr
gaErrors[lnErrorRows,9]=pcChildDBF
gaErrors[lnErrorRows,10]=pnChildRec
gaErrors[lnErrorRows,11]=pcChildID
gaErrors[lnErrorRows,12]=pcChildExpr
return tnErrNo


PROCEDURE riopen
PARAMETERS tcTable,tcOrder
local lcCurWkArea,lcNewWkArea,lnInUseSpot
lnInUseSpot=atc(tcTable+"*",pcRIcursors)
IF lnInUseSpot=0
  lcCurWkArea=select()
  SELECT 0
  lcNewWkArea=select()
  IF NOT EMPTY(tcOrder)
    USE (tcTable) AGAIN ORDER (tcOrder) ;
      ALIAS ("__ri"+LTRIM(STR(SELECT()))) share
  ELSE
    USE (tcTable) AGAIN ALIAS ("__ri"+LTRIM(STR(SELECT()))) share
  ENDIF
  if pnerror=0
    pcRIcursors=pcRIcursors+upper(tcTable)+"?"+STR(SELECT(),5)
  else
    lcNewWkArea=0
  endif something bad happened while attempting to open the file
ELSE
  lcNewWkArea=val(substr(pcRIcursors,lnInUseSpot+len(tcTable)+1,5))
  pcRIcursors = strtran(pcRIcursors,upper(tcTable)+"*"+str(lcNewWkArea,5),;
    upper(tcTable)+"?"+str(lcNewWkArea,5))
  IF NOT EMPTY(tcOrder)
    SET ORDER TO (tcOrder) IN (lcNewWkArea)
  ENDIF sent an order
  if pnerror<>0
    lcNewWkArea=0
  endif something bad happened while setting order
ENDIF
RETURN (lcNewWkArea)


PROCEDURE riend
PARAMETERS tlSuccess
local lnXX,lnSpot,lcWorkArea
IF tlSuccess
  END TRANSACTION
ELSE
  SET DELETED OFF
  ROLLBACK
  SET DELETED ON
ENDIF
IF EMPTY(pcRIolderror)
  ON ERROR
ELSE
  ON ERROR &pcRIolderror.
ENDIF
FOR lnXX=1 TO occurs("*",pcRIcursors)
  lnSpot=atc("*",pcRIcursors,lnXX)+1
  USE IN (VAL(substr(pcRIcursors,lnSpot,5)))
ENDFOR
IF pcOldCompat = "ON"
	SET COMPATIBLE ON
ENDIF
IF pcOldDele="OFF"
  SET DELETED OFF
ENDIF
IF pcOldExact="ON"
  SET EXACT ON
ENDIF
IF pcOldTalk="ON"
  SET TALK ON
ENDIF
do case
  case empty(pcOldDBC)
    set data to
  case pcOldDBC<>DBC()
    set data to (pcOldDBC)
endcase
RETURN .T.


PROCEDURE rireuse
* rireuse.prg
PARAMETERS tcTableName,tcWkArea
pcRIcursors = strtran(pcRIcursors,upper(tcTableName)+"?"+str(tcWkArea,5),;
  upper(tcTableName)+"*"+str(tcWkArea,5))
RETURN .t.

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" combust
PROCEDURE __RI_DELETE_combust
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODUFC TO lcParentID,pcParentID
pcParentExpr="CODUFC"
lcChildWkArea=riopen("auxcomb","codufc")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODUFC=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODUFC
  pcChildExpr="CODUFC"
  llRetVal=ridelete()
ENDSCAN get all of the auxcomb records
=rireuse("auxcomb",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" combust
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_combust
** "Desencadenante de actualizar integridad referencial para" combust
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="MAQUINAS")
  SELECT (lcChildWkArea)
  lcChildID=CODMAQ
  lcOldChildID=oldval("CODMAQ")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODMAQ"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("maquinas","codmaq")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("maquinas",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "maquinas"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" combust
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" combust
PROCEDURE __RI_INSERT_combust
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODMAQ
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODMAQ"
lcParentWkArea=riopen("maquinas","codmaq")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("maquinas",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" combust
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_compins
** "Desencadenante de actualizar integridad referencial para" compins
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="INSUMO")
  SELECT (lcChildWkArea)
  lcChildID=CODINSUM
  lcOldChildID=oldval("CODINSUM")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODINSUM"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("insumo","codinsum")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("insumo",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "insumo"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UNDCOMP")
  SELECT (lcChildWkArea)
  lcChildID=CODUNID
  lcOldChildID=oldval("CODUNID")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODUNID"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("undcomp","codigo")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("undcomp",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "undcomp"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" compins
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" compins
PROCEDURE __RI_INSERT_compins
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODINSUM
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODINSUM"
lcParentWkArea=riopen("insumo","codinsum")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("insumo",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODUNID
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODUNID"
lcParentWkArea=riopen("undcomp","codigo")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("undcomp",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" compins
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" cpg
PROCEDURE __RI_DELETE_cpg
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODCP TO lcParentID,pcParentID
pcParentExpr="CODCP"
lcChildWkArea=riopen("cpd","codcp")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODCP=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODCP
  pcChildExpr="CODCP"
  llRetVal=ridelete()
ENDSCAN get all of the cpd records
=rireuse("cpd",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" cpg
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_cpg
** "Desencadenante de actualizar integridad referencial para" cpg
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODCP")
pcParentID=lcOldParentID
pcParentExpr="CODCP"
lcParentID=CODCP
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("cpd")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODCP=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODCP
    pcChildExpr="CODCP"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODCP",lcParentID,"CPG")
  ENDSCAN get all of the cpd records
  =rireuse("cpd",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" cpg
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" credito
PROCEDURE __RI_DELETE_credito
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODCRED TO lcParentID,pcParentID
pcParentExpr="CODCRED"
lcChildWkArea=riopen("dcredito","codcred")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODCRED=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODCRED
  pcChildExpr="CODCRED"
  llRetVal=ridelete()
ENDSCAN get all of the dcredito records
=rireuse("dcredito",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" credito
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_credito
** "Desencadenante de actualizar integridad referencial para" credito
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UBICA")
  SELECT (lcChildWkArea)
  lcChildID=CODFIN
  lcOldChildID=oldval("CODFIN")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODFIN"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("ubica","codfin")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("ubica",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "ubica"
lcParentWkArea=lcChildWkArea
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODCRED")
pcParentID=lcOldParentID
pcParentExpr="CODCRED"
lcParentID=CODCRED
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("dcredito")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODCRED=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODCRED
    pcChildExpr="CODCRED"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODCRED",lcParentID,"CREDITO")
  ENDSCAN get all of the dcredito records
  =rireuse("dcredito",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" credito
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" credito
PROCEDURE __RI_INSERT_credito
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODFIN
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODFIN"
lcParentWkArea=riopen("ubica","codfin")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("ubica",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" credito
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" cultivo
PROCEDURE __RI_DELETE_cultivo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODCULTIVO TO lcParentID,pcParentID
pcParentExpr="CODCULTIVO"
lcChildWkArea=riopen("infculti","codcult")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODCULTIVO=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODCULTIVO
  pcChildExpr="CODCULTIVO"
  llRetVal=ridelete()
ENDSCAN get all of the infculti records
=rireuse("infculti",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" cultivo
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_cultivo
** "Desencadenante de actualizar integridad referencial para" cultivo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODCULTIVO")
pcParentID=lcOldParentID
pcParentExpr="CODCULTIVO"
lcParentID=CODCULTIVO
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("infculti")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODCULTIVO=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODCULTIVO
    pcChildExpr="CODCULTIVO"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODCULTIVO",lcParentID,"CULTIVO")
  ENDSCAN get all of the infculti records
  =rireuse("infculti",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" cultivo
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_dcredito
** "Desencadenante de actualizar integridad referencial para" dcredito
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="CREDITO")
  SELECT (lcChildWkArea)
  lcChildID=CODCRED
  lcOldChildID=oldval("CODCRED")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODCRED"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("credito","codcred")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("credito",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "credito"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" dcredito
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" dcredito
PROCEDURE __RI_INSERT_dcredito
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODCRED
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODCRED"
lcParentWkArea=riopen("credito","codcred")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("credito",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" dcredito
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_facins
** "Desencadenante de actualizar integridad referencial para" facins
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UBICA")
  SELECT (lcChildWkArea)
  lcChildID=CODFIN
  lcOldChildID=oldval("CODFIN")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODFIN"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("ubica","codfin")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("ubica",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "ubica"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" facins
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" facins
PROCEDURE __RI_INSERT_facins
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODFIN
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODFIN"
lcParentWkArea=riopen("ubica","codfin")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("ubica",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" facins
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" infculti
PROCEDURE __RI_DELETE_infculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE NUMCONTROL TO lcParentID,pcParentID
pcParentExpr="NUMCONTROL"
lcChildWkArea=riopen("procion","numcontrol")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE NUMCONTROL=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=NUMCONTROL
  pcChildExpr="NUMCONTROL"
  llRetVal=ridelete()
ENDSCAN get all of the procion records
=rireuse("procion",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" infculti
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_infculti
** "Desencadenante de actualizar integridad referencial para" infculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="CULTIVO")
  SELECT (lcChildWkArea)
  lcChildID=CODCULTIVO
  lcOldChildID=oldval("CODCULTIVO")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODCULTIVO"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("cultivo","codcultivo")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("cultivo",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "cultivo"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="LOTESFIN")
  SELECT (lcChildWkArea)
  lcChildID=CODLOTE
  lcOldChildID=oldval("CODLOTE")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODLOTE"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("lotesfin","codlote")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("lotesfin",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "lotesfin"
lcParentWkArea=lcChildWkArea
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("NUMCONTROL")
pcParentID=lcOldParentID
pcParentExpr="NUMCONTROL"
lcParentID=NUMCONTROL
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("procion")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR NUMCONTROL=lcOldParentID
    pnChildRec=recno()
    pcChildID=NUMCONTROL
    pcChildExpr="NUMCONTROL"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("NUMCONTROL",lcParentID,"INFCULTI")
  ENDSCAN get all of the procion records
  =rireuse("procion",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" infculti
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" infculti
PROCEDURE __RI_INSERT_infculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODCULTIVO
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODCULTIVO"
lcParentWkArea=riopen("cultivo","codcultivo")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("cultivo",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODLOTE
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODLOTE"
lcParentWkArea=riopen("lotesfin","codlote")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("lotesfin",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" infculti
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" insaplica
PROCEDURE __RI_DELETE_insaplica
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODINSAP TO lcParentID,pcParentID
pcParentExpr="CODINSAP"
lcChildWkArea=riopen("auxapli","codinsap")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODINSAP=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODINSAP
  pcChildExpr="CODINSAP"
  llRetVal=ridelete()
ENDSCAN get all of the auxapli records
=rireuse("auxapli",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" insaplica
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_insaplica
** "Desencadenante de actualizar integridad referencial para" insaplica
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODINSAP")
pcParentID=lcOldParentID
pcParentExpr="CODINSAP"
lcParentID=CODINSAP
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("auxapli")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODINSAP=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODINSAP
    pcChildExpr="CODINSAP"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODINSAP",lcParentID,"INSAPLICA")
  ENDSCAN get all of the auxapli records
  =rireuse("auxapli",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" insaplica
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" insumo
PROCEDURE __RI_DELETE_insumo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODINSUM TO lcParentID,pcParentID
pcParentExpr="CODINSUM"
lcChildWkArea=riopen("compins","codinsum")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODINSUM=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODINSUM
  pcChildExpr="CODINSUM"
  llRetVal=ridelete()
ENDSCAN get all of the compins records
=rireuse("compins",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODINSUM TO lcParentID,pcParentID
pcParentExpr="CODINSUM"
lcChildWkArea=riopen("ufc","codinsum")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODINSUM=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODINSUM
  pcChildExpr="CODINSUM"
  llRetVal=ridelete()
ENDSCAN get all of the ufc records
=rireuse("ufc",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" insumo
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_insumo
** "Desencadenante de actualizar integridad referencial para" insumo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="TIPINSU")
  SELECT (lcChildWkArea)
  lcChildID=CODTIPO
  lcOldChildID=oldval("CODTIPO")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODTIPO"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("tipinsu","codtipo")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("tipinsu",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "tipinsu"
lcParentWkArea=lcChildWkArea
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODINSUM")
pcParentID=lcOldParentID
pcParentExpr="CODINSUM"
lcParentID=CODINSUM
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("compins")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODINSUM=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODINSUM
    pcChildExpr="CODINSUM"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODINSUM",lcParentID,"INSUMO")
  ENDSCAN get all of the compins records
  =rireuse("compins",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODINSUM")
pcParentID=lcOldParentID
pcParentExpr="CODINSUM"
lcParentID=CODINSUM
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("ufc")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODINSUM=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODINSUM
    pcChildExpr="CODINSUM"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODINSUM",lcParentID,"INSUMO")
  ENDSCAN get all of the ufc records
  =rireuse("ufc",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" insumo
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" insumo
PROCEDURE __RI_INSERT_insumo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODTIPO
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODTIPO"
lcParentWkArea=riopen("tipinsu","codtipo")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("tipinsu",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" insumo
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_invenini
** "Desencadenante de actualizar integridad referencial para" invenini
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UBICA")
  SELECT (lcChildWkArea)
  lcChildID=CODFIN
  lcOldChildID=oldval("CODFIN")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODFIN"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("ubica","codfin")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("ubica",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "ubica"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" invenini
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" invenini
PROCEDURE __RI_INSERT_invenini
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODFIN
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODFIN"
lcParentWkArea=riopen("ubica","codfin")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("ubica",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" invenini
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" iprov
PROCEDURE __RI_DELETE_iprov
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODPROV TO lcParentID,pcParentID
pcParentExpr="CODPROV"
lcChildWkArea=riopen("jorculti","codprov")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODPROV=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODPROV
  pcChildExpr="CODPROV"
  llRetVal=ridelete()
ENDSCAN get all of the jorculti records
=rireuse("jorculti",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODPROV TO lcParentID,pcParentID
pcParentExpr="CODPROV"
lcChildWkArea=riopen("ventas","codprov")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODPROV=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODPROV
  pcChildExpr="CODPROV"
  llRetVal=ridelete()
ENDSCAN get all of the ventas records
=rireuse("ventas",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODPROV TO lcParentID,pcParentID
pcParentExpr="CODPROV"
lcChildWkArea=riopen("maqmant","codprov")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODPROV=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODPROV
  pcChildExpr="CODPROV"
  llRetVal=ridelete()
ENDSCAN get all of the maqmant records
=rireuse("maqmant",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODPROV TO lcParentID,pcParentID
pcParentExpr="CODPROV"
lcChildWkArea=riopen("labculti","codprov")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODPROV=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODPROV
  pcChildExpr="CODPROV"
  llRetVal=ridelete()
ENDSCAN get all of the labculti records
=rireuse("labculti",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" iprov
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_iprov
** "Desencadenante de actualizar integridad referencial para" iprov
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODPROV")
pcParentID=lcOldParentID
pcParentExpr="CODPROV"
lcParentID=CODPROV
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("jorculti")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODPROV=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODPROV
    pcChildExpr="CODPROV"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODPROV",lcParentID,"IPROV")
  ENDSCAN get all of the jorculti records
  =rireuse("jorculti",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODPROV")
pcParentID=lcOldParentID
pcParentExpr="CODPROV"
lcParentID=CODPROV
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("ventas")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODPROV=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODPROV
    pcChildExpr="CODPROV"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODPROV",lcParentID,"IPROV")
  ENDSCAN get all of the ventas records
  =rireuse("ventas",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODPROV")
pcParentID=lcOldParentID
pcParentExpr="CODPROV"
lcParentID=CODPROV
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("maqmant")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODPROV=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODPROV
    pcChildExpr="CODPROV"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODPROV",lcParentID,"IPROV")
  ENDSCAN get all of the maqmant records
  =rireuse("maqmant",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODPROV")
pcParentID=lcOldParentID
pcParentExpr="CODPROV"
lcParentID=CODPROV
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("labculti")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODPROV=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODPROV
    pcChildExpr="CODPROV"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODPROV",lcParentID,"IPROV")
  ENDSCAN get all of the labculti records
  =rireuse("labculti",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" iprov
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_jorculti
** "Desencadenante de actualizar integridad referencial para" jorculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="IPROV")
  SELECT (lcChildWkArea)
  lcChildID=CODPROV
  lcOldChildID=oldval("CODPROV")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODPROV"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("iprov","codprov")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("iprov",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "iprov"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="LABOR")
  SELECT (lcChildWkArea)
  lcChildID=CODLABOR
  lcOldChildID=oldval("CODLABOR")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODLABOR"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("labor","codlabor")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("labor",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "labor"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" jorculti
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" jorculti
PROCEDURE __RI_INSERT_jorculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODPROV
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODPROV"
lcParentWkArea=riopen("iprov","codprov")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("iprov",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODLABOR
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODLABOR"
lcParentWkArea=riopen("labor","codlabor")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("labor",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" jorculti
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_labculti
** "Desencadenante de actualizar integridad referencial para" labculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="LABOR")
  SELECT (lcChildWkArea)
  lcChildID=CODLABOR
  lcOldChildID=oldval("CODLABOR")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODLABOR"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("labor","codlabor")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("labor",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "labor"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="IPROV")
  SELECT (lcChildWkArea)
  lcChildID=CODPROV
  lcOldChildID=oldval("CODPROV")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODPROV"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("iprov","codprov")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("iprov",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "iprov"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" labculti
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" labculti
PROCEDURE __RI_INSERT_labculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODLABOR
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODLABOR"
lcParentWkArea=riopen("labor","codlabor")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("labor",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODPROV
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODPROV"
lcParentWkArea=riopen("iprov","codprov")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("iprov",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" labculti
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" labor
PROCEDURE __RI_DELETE_labor
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODLABOR TO lcParentID,pcParentID
pcParentExpr="CODLABOR"
lcChildWkArea=riopen("labculti","codlabor")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODLABOR=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODLABOR
  pcChildExpr="CODLABOR"
  llRetVal=ridelete()
ENDSCAN get all of the labculti records
=rireuse("labculti",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODLABOR TO lcParentID,pcParentID
pcParentExpr="CODLABOR"
lcChildWkArea=riopen("jorculti","codlabor")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODLABOR=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODLABOR
  pcChildExpr="CODLABOR"
  llRetVal=ridelete()
ENDSCAN get all of the jorculti records
=rireuse("jorculti",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODLABOR TO lcParentID,pcParentID
pcParentExpr="CODLABOR"
lcChildWkArea=riopen("maqculti","codlabor")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODLABOR=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODLABOR
  pcChildExpr="CODLABOR"
  llRetVal=ridelete()
ENDSCAN get all of the maqculti records
=rireuse("maqculti",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" labor
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_labor
** "Desencadenante de actualizar integridad referencial para" labor
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODLABOR")
pcParentID=lcOldParentID
pcParentExpr="CODLABOR"
lcParentID=CODLABOR
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("labculti")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODLABOR=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODLABOR
    pcChildExpr="CODLABOR"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODLABOR",lcParentID,"LABOR")
  ENDSCAN get all of the labculti records
  =rireuse("labculti",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODLABOR")
pcParentID=lcOldParentID
pcParentExpr="CODLABOR"
lcParentID=CODLABOR
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("jorculti")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODLABOR=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODLABOR
    pcChildExpr="CODLABOR"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODLABOR",lcParentID,"LABOR")
  ENDSCAN get all of the jorculti records
  =rireuse("jorculti",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODLABOR")
pcParentID=lcOldParentID
pcParentExpr="CODLABOR"
lcParentID=CODLABOR
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("maqculti")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODLABOR=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODLABOR
    pcChildExpr="CODLABOR"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODLABOR",lcParentID,"LABOR")
  ENDSCAN get all of the maqculti records
  =rireuse("maqculti",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" labor
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" lotesfin
PROCEDURE __RI_DELETE_lotesfin
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODLOTE TO lcParentID,pcParentID
pcParentExpr="CODLOTE"
lcChildWkArea=riopen("infculti","codlote")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODLOTE=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODLOTE
  pcChildExpr="CODLOTE"
  llRetVal=ridelete()
ENDSCAN get all of the infculti records
=rireuse("infculti",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" lotesfin
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_lotesfin
** "Desencadenante de actualizar integridad referencial para" lotesfin
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UBICA")
  SELECT (lcChildWkArea)
  lcChildID=CODFIN
  lcOldChildID=oldval("CODFIN")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODFIN"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("ubica","codfin")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("ubica",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "ubica"
lcParentWkArea=lcChildWkArea
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODLOTE")
pcParentID=lcOldParentID
pcParentExpr="CODLOTE"
lcParentID=CODLOTE
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("infculti")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODLOTE=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODLOTE
    pcChildExpr="CODLOTE"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODLOTE",lcParentID,"LOTESFIN")
  ENDSCAN get all of the infculti records
  =rireuse("infculti",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" lotesfin
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" lotesfin
PROCEDURE __RI_INSERT_lotesfin
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODFIN
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODFIN"
lcParentWkArea=riopen("ubica","codfin")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("ubica",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" lotesfin
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_maqculti
** "Desencadenante de actualizar integridad referencial para" maqculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="LABOR")
  SELECT (lcChildWkArea)
  lcChildID=CODLABOR
  lcOldChildID=oldval("CODLABOR")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODLABOR"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("labor","codlabor")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("labor",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "labor"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="MAQUINAS")
  SELECT (lcChildWkArea)
  lcChildID=CODMAQ
  lcOldChildID=oldval("CODMAQ")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODMAQ"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("maquinas","codmaq")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("maquinas",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "maquinas"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" maqculti
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" maqculti
PROCEDURE __RI_INSERT_maqculti
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODLABOR
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODLABOR"
lcParentWkArea=riopen("labor","codlabor")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("labor",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODMAQ
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODMAQ"
lcParentWkArea=riopen("maquinas","codmaq")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("maquinas",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" maqculti
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_maqmant
** "Desencadenante de actualizar integridad referencial para" maqmant
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="MAQUINAS")
  SELECT (lcChildWkArea)
  lcChildID=CODMAQ
  lcOldChildID=oldval("CODMAQ")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODMAQ"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("maquinas","codmaq")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("maquinas",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "maquinas"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="IPROV")
  SELECT (lcChildWkArea)
  lcChildID=CODPROV
  lcOldChildID=oldval("CODPROV")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODPROV"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("iprov","codprov")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("iprov",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "iprov"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" maqmant
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" maqmant
PROCEDURE __RI_INSERT_maqmant
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODMAQ
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODMAQ"
lcParentWkArea=riopen("maquinas","codmaq")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("maquinas",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODPROV
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODPROV"
lcParentWkArea=riopen("iprov","codprov")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("iprov",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" maqmant
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" maqtipo
PROCEDURE __RI_DELETE_maqtipo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODTMAQ TO lcParentID,pcParentID
pcParentExpr="CODTMAQ"
lcChildWkArea=riopen("maquinas","codtmaq")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODTMAQ=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODTMAQ
  pcChildExpr="CODTMAQ"
  llRetVal=ridelete()
ENDSCAN get all of the maquinas records
=rireuse("maquinas",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" maqtipo
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_maqtipo
** "Desencadenante de actualizar integridad referencial para" maqtipo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODTMAQ")
pcParentID=lcOldParentID
pcParentExpr="CODTMAQ"
lcParentID=CODTMAQ
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("maquinas")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODTMAQ=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODTMAQ
    pcChildExpr="CODTMAQ"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODTMAQ",lcParentID,"MAQTIPO")
  ENDSCAN get all of the maquinas records
  =rireuse("maquinas",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" maqtipo
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" maquinas
PROCEDURE __RI_DELETE_maquinas
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODMAQ TO lcParentID,pcParentID
pcParentExpr="CODMAQ"
lcChildWkArea=riopen("maqmant","codmaq")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODMAQ=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODMAQ
  pcChildExpr="CODMAQ"
  llRetVal=ridelete()
ENDSCAN get all of the maqmant records
=rireuse("maqmant",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODMAQ TO lcParentID,pcParentID
pcParentExpr="CODMAQ"
lcChildWkArea=riopen("combust","codmaq")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODMAQ=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODMAQ
  pcChildExpr="CODMAQ"
  llRetVal=ridelete()
ENDSCAN get all of the combust records
=rireuse("combust",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODMAQ TO lcParentID,pcParentID
pcParentExpr="CODMAQ"
lcChildWkArea=riopen("maqculti","codmaq")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODMAQ=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODMAQ
  pcChildExpr="CODMAQ"
  llRetVal=ridelete()
ENDSCAN get all of the maqculti records
=rireuse("maqculti",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" maquinas
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_maquinas
** "Desencadenante de actualizar integridad referencial para" maquinas
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="MAQTIPO")
  SELECT (lcChildWkArea)
  lcChildID=CODTMAQ
  lcOldChildID=oldval("CODTMAQ")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODTMAQ"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("maqtipo","codtmaq")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("maqtipo",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "maqtipo"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UBICA")
  SELECT (lcChildWkArea)
  lcChildID=CODFIN
  lcOldChildID=oldval("CODFIN")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODFIN"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("ubica","codfin")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("ubica",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "ubica"
lcParentWkArea=lcChildWkArea
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODMAQ")
pcParentID=lcOldParentID
pcParentExpr="CODMAQ"
lcParentID=CODMAQ
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("maqmant")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODMAQ=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODMAQ
    pcChildExpr="CODMAQ"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODMAQ",lcParentID,"MAQUINAS")
  ENDSCAN get all of the maqmant records
  =rireuse("maqmant",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODMAQ")
pcParentID=lcOldParentID
pcParentExpr="CODMAQ"
lcParentID=CODMAQ
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("combust")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODMAQ=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODMAQ
    pcChildExpr="CODMAQ"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODMAQ",lcParentID,"MAQUINAS")
  ENDSCAN get all of the combust records
  =rireuse("combust",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODMAQ")
pcParentID=lcOldParentID
pcParentExpr="CODMAQ"
lcParentID=CODMAQ
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("maqculti")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODMAQ=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODMAQ
    pcChildExpr="CODMAQ"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODMAQ",lcParentID,"MAQUINAS")
  ENDSCAN get all of the maqculti records
  =rireuse("maqculti",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" maquinas
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" maquinas
PROCEDURE __RI_INSERT_maquinas
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODTMAQ
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODTMAQ"
lcParentWkArea=riopen("maqtipo","codtmaq")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("maqtipo",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODFIN
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODFIN"
lcParentWkArea=riopen("ubica","codfin")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("ubica",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" maquinas
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_metereo
** "Desencadenante de actualizar integridad referencial para" metereo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UBICA")
  SELECT (lcChildWkArea)
  lcChildID=CODFIN
  lcOldChildID=oldval("CODFIN")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODFIN"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("ubica","codfin")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("ubica",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "ubica"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" metereo
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" metereo
PROCEDURE __RI_INSERT_metereo
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODFIN
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODFIN"
lcParentWkArea=riopen("ubica","codfin")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("ubica",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" metereo
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_procion
** "Desencadenante de actualizar integridad referencial para" procion
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="INFCULTI")
  SELECT (lcChildWkArea)
  lcChildID=NUMCONTROL
  lcOldChildID=oldval("NUMCONTROL")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="NUMCONTROL"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("infculti","numcontrol")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("infculti",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "infculti"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" procion
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" procion
PROCEDURE __RI_INSERT_procion
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=NUMCONTROL
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="NUMCONTROL"
lcParentWkArea=riopen("infculti","numcontrol")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("infculti",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" procion
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" tipinsu
PROCEDURE __RI_DELETE_tipinsu
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODTIPO TO lcParentID,pcParentID
pcParentExpr="CODTIPO"
lcChildWkArea=riopen("insumo","codtipo")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODTIPO=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODTIPO
  pcChildExpr="CODTIPO"
  llRetVal=ridelete()
ENDSCAN get all of the insumo records
=rireuse("insumo",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" tipinsu
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_tipinsu
** "Desencadenante de actualizar integridad referencial para" tipinsu
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODTIPO")
pcParentID=lcOldParentID
pcParentExpr="CODTIPO"
lcParentID=CODTIPO
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("insumo")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODTIPO=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODTIPO
    pcChildExpr="CODTIPO"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODTIPO",lcParentID,"TIPINSU")
  ENDSCAN get all of the insumo records
  =rireuse("insumo",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" tipinsu
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" ubica
PROCEDURE __RI_DELETE_ubica
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODFIN TO lcParentID,pcParentID
pcParentExpr="CODFIN"
lcChildWkArea=riopen("lotesfin","codfin")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODFIN=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODFIN
  pcChildExpr="CODFIN"
  llRetVal=ridelete()
ENDSCAN get all of the lotesfin records
=rireuse("lotesfin",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODFIN TO lcParentID,pcParentID
pcParentExpr="CODFIN"
lcChildWkArea=riopen("credito","codfin")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODFIN=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODFIN
  pcChildExpr="CODFIN"
  llRetVal=ridelete()
ENDSCAN get all of the credito records
=rireuse("credito",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODFIN TO lcParentID,pcParentID
pcParentExpr="CODFIN"
lcChildWkArea=riopen("facins","codfin")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODFIN=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODFIN
  pcChildExpr="CODFIN"
  llRetVal=ridelete()
ENDSCAN get all of the facins records
=rireuse("facins",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODFIN TO lcParentID,pcParentID
pcParentExpr="CODFIN"
lcChildWkArea=riopen("invenini","codfin")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODFIN=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODFIN
  pcChildExpr="CODFIN"
  llRetVal=ridelete()
ENDSCAN get all of the invenini records
=rireuse("invenini",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODFIN TO lcParentID,pcParentID
pcParentExpr="CODFIN"
lcChildWkArea=riopen("maquinas","codfin")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODFIN=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODFIN
  pcChildExpr="CODFIN"
  llRetVal=ridelete()
ENDSCAN get all of the maquinas records
=rireuse("maquinas",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODFIN TO lcParentID,pcParentID
pcParentExpr="CODFIN"
lcChildWkArea=riopen("ufc","codfin")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODFIN=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODFIN
  pcChildExpr="CODFIN"
  llRetVal=ridelete()
ENDSCAN get all of the ufc records
=rireuse("ufc",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODFIN TO lcParentID,pcParentID
pcParentExpr="CODFIN"
lcChildWkArea=riopen("metereo","codfin")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODFIN=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODFIN
  pcChildExpr="CODFIN"
  llRetVal=ridelete()
ENDSCAN get all of the metereo records
=rireuse("metereo",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" ubica
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_ubica
** "Desencadenante de actualizar integridad referencial para" ubica
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODFIN")
pcParentID=lcOldParentID
pcParentExpr="CODFIN"
lcParentID=CODFIN
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("lotesfin")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODFIN=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODFIN
    pcChildExpr="CODFIN"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODFIN",lcParentID,"UBICA")
  ENDSCAN get all of the lotesfin records
  =rireuse("lotesfin",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODFIN")
pcParentID=lcOldParentID
pcParentExpr="CODFIN"
lcParentID=CODFIN
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("credito")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODFIN=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODFIN
    pcChildExpr="CODFIN"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODFIN",lcParentID,"UBICA")
  ENDSCAN get all of the credito records
  =rireuse("credito",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODFIN")
pcParentID=lcOldParentID
pcParentExpr="CODFIN"
lcParentID=CODFIN
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("facins")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODFIN=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODFIN
    pcChildExpr="CODFIN"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODFIN",lcParentID,"UBICA")
  ENDSCAN get all of the facins records
  =rireuse("facins",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODFIN")
pcParentID=lcOldParentID
pcParentExpr="CODFIN"
lcParentID=CODFIN
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("invenini")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODFIN=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODFIN
    pcChildExpr="CODFIN"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODFIN",lcParentID,"UBICA")
  ENDSCAN get all of the invenini records
  =rireuse("invenini",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODFIN")
pcParentID=lcOldParentID
pcParentExpr="CODFIN"
lcParentID=CODFIN
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("maquinas")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODFIN=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODFIN
    pcChildExpr="CODFIN"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODFIN",lcParentID,"UBICA")
  ENDSCAN get all of the maquinas records
  =rireuse("maquinas",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODFIN")
pcParentID=lcOldParentID
pcParentExpr="CODFIN"
lcParentID=CODFIN
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("ufc")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODFIN=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODFIN
    pcChildExpr="CODFIN"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODFIN",lcParentID,"UBICA")
  ENDSCAN get all of the ufc records
  =rireuse("ufc",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODFIN")
pcParentID=lcOldParentID
pcParentExpr="CODFIN"
lcParentID=CODFIN
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("metereo")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODFIN=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODFIN
    pcChildExpr="CODFIN"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODFIN",lcParentID,"UBICA")
  ENDSCAN get all of the metereo records
  =rireuse("metereo",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" ubica
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" ufc
PROCEDURE __RI_DELETE_ufc
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODUFC TO lcParentID,pcParentID
pcParentExpr="CODUFC"
lcChildWkArea=riopen("auxufc","codufc")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODUFC=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODUFC
  pcChildExpr="CODUFC"
  llRetVal=ridelete()
ENDSCAN get all of the auxufc records
=rireuse("auxufc",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" ufc
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_ufc
** "Desencadenante de actualizar integridad referencial para" ufc
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="INSUMO")
  SELECT (lcChildWkArea)
  lcChildID=CODINSUM
  lcOldChildID=oldval("CODINSUM")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODINSUM"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("insumo","codinsum")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("insumo",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "insumo"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UNDCOMP")
  SELECT (lcChildWkArea)
  lcChildID=CODUNID
  lcOldChildID=oldval("CODUNID")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODUNID"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("undcomp","codigo")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("undcomp",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "undcomp"
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UBICA")
  SELECT (lcChildWkArea)
  lcChildID=CODFIN
  lcOldChildID=oldval("CODFIN")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODFIN"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("ubica","codfin")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("ubica",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "ubica"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" ufc
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" ufc
PROCEDURE __RI_INSERT_ufc
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODINSUM
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODINSUM"
lcParentWkArea=riopen("insumo","codinsum")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("insumo",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODUNID
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODUNID"
lcParentWkArea=riopen("undcomp","codigo")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("undcomp",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcChildWkArea)
lcChildID=CODFIN
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODFIN"
lcParentWkArea=riopen("ubica","codfin")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("ubica",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" ufc
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" undcomp
PROCEDURE __RI_DELETE_undcomp
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODIGO TO lcParentID,pcParentID
pcParentExpr="CODIGO"
lcChildWkArea=riopen("compins","codunid")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODUNID=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODUNID
  pcChildExpr="CODUNID"
  llRetVal=ridelete()
ENDSCAN get all of the compins records
=rireuse("compins",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODIGO TO lcParentID,pcParentID
pcParentExpr="CODIGO"
lcChildWkArea=riopen("ufc","codunid")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODUNID=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODUNID
  pcChildExpr="CODUNID"
  llRetVal=ridelete()
ENDSCAN get all of the ufc records
=rireuse("ufc",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" undcomp
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_undcomp
** "Desencadenante de actualizar integridad referencial para" undcomp
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="UNDMEDIS")
  SELECT (lcChildWkArea)
  lcChildID=CODUNIDAD
  lcOldChildID=oldval("CODUNIDAD")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODUNIDAD"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("undmedis","codunidad")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("undmedis",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "undmedis"
lcParentWkArea=lcChildWkArea
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODIGO")
pcParentID=lcOldParentID
pcParentExpr="CODIGO"
lcParentID=CODIGO
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("compins")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODUNID=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODUNID
    pcChildExpr="CODUNID"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODUNID",lcParentID,"UNDCOMP")
  ENDSCAN get all of the compins records
  =rireuse("compins",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODIGO")
pcParentID=lcOldParentID
pcParentExpr="CODIGO"
lcParentID=CODIGO
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("ufc")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODUNID=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODUNID
    pcChildExpr="CODUNID"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODUNID",lcParentID,"UNDCOMP")
  ENDSCAN get all of the ufc records
  =rireuse("ufc",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" undcomp
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" undcomp
PROCEDURE __RI_INSERT_undcomp
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODUNIDAD
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODUNIDAD"
lcParentWkArea=riopen("undmedis","codunidad")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("undmedis",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" undcomp
********************************************************************************

********************************************************************************
** "Desencadenante de eliminar integridad referencial para" undmedis
PROCEDURE __RI_DELETE_undmedis
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcParentWkArea
LOCAL llDelHeaderarea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
STORE CODUNIDAD TO lcParentID,pcParentID
pcParentExpr="CODUNIDAD"
lcChildWkArea=riopen("undcomp","codunidad")
IF lcChildWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  RETURN .F.
ENDIF not able to open the child work area
pcChildDBF=dbf(lcChildWkArea)
SELECT (lcChildWkArea)
SEEK lcParentID
SCAN WHILE CODUNIDAD=lcParentID AND llRetVal
  pnChildRec=recno()
  pcChildID=CODUNIDAD
  pcChildExpr="CODUNIDAD"
  llRetVal=ridelete()
ENDSCAN get all of the undcomp records
=rireuse("undcomp",lcChildWkArea)
IF NOT llRetVal
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de eliminar integridad referencial para" undmedis
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_undmedis
** "Desencadenante de actualizar integridad referencial para" undmedis
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcParentWkArea=select()
SELECT (lcParentWkArea)
pcParentDBF=dbf()
pnParentRec=recno()
lcOldParentID=OLDVAL("CODUNIDAD")
pcParentID=lcOldParentID
pcParentExpr="CODUNIDAD"
lcParentID=CODUNIDAD
IF lcParentID<>lcOldParentID
  lcChildWkArea=riopen("undcomp")
  IF lcChildWkArea<=0
    IF _triggerlevel=1
      DO riend WITH .F.
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN .F.
  ENDIF not able to open the child work area
  pcChildDBF=dbf(lcChildWkArea)
  SELECT (lcChildWkArea)
  SCAN FOR CODUNIDAD=lcOldParentID
    pnChildRec=recno()
    pcChildID=CODUNIDAD
    pcChildExpr="CODUNIDAD"
    IF NOT llRetVal
      EXIT
    ENDIF && not llretval
    llRetVal=riupdate("CODUNIDAD",lcParentID,"UNDMEDIS")
  ENDSCAN get all of the undcomp records
  =rireuse("undcomp",lcChildWkArea)
  IF NOT llRetVal
    IF _triggerlevel=1
      DO riend WITH llRetVal
    ENDIF at the end of the highest trigger level
    SELECT (lcStartArea)
    RETURN llRetVal
  ENDIF
ENDIF this parent id changed
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" undmedis
********************************************************************************

********************************************************************************
procedure __RI_UPDATE_ventas
** "Desencadenante de actualizar integridad referencial para" ventas
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcParentID && parent's value to be sought in child
LOCAL lcOldParentID && previous parent id value
LOCAL lcChildWkArea && child work area handle returned by riopen
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcOldChildID && old child id value
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=select()
IF _triggerlevel=1 or type("pccascadeparent")#"C" or (NOT pccascadeparent=="IPROV")
  SELECT (lcChildWkArea)
  lcChildID=CODPROV
  lcOldChildID=oldval("CODPROV")
  pcChildDBF=dbf(lcChildWkArea)
  pnChildRec=recno(lcChildWkArea)
  pcChildID=lcOldChildID
  pcChildExpr="CODPROV"
  IF lcChildID<>lcOldChildID
    lcParentWkArea=riopen("iprov","codprov")
    IF lcParentWkArea<=0
      IF _triggerlevel=1
        DO riend WITH .F.
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN .F.
    ENDIF not able to open the child work area
    pcParentDBF=dbf(lcParentWkArea)
    llRetVal=SEEK(lcChildID,lcParentWkArea)
    pnParentRec=recno(lcParentWkArea)
    =rireuse("iprov",lcParentWkArea)
    IF NOT llRetVal
      DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
      IF _triggerlevel=1
        DO riend WITH llRetVal
      ENDIF at the end of the highest trigger level
      SELECT (lcStartArea)
      RETURN llRetVal
    ENDIF no parent
  ENDIF this value was changed
ENDIF not part of a cascade from "iprov"
lcParentWkArea=lcChildWkArea
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de actualizar integridad referencial para" ventas
********************************************************************************

********************************************************************************
** "Desencadenante de insertar integridad referencial para" ventas
PROCEDURE __RI_INSERT_ventas
LOCAL llRetVal
llRetVal = .t.
PRIVATE pcParentDBF,pnParentRec,pcChildDBF,pnChildRec,pcParentID,pcChildID
PRIVATE pcParentExpr,pcChildExpr
STORE "" TO pcParentDBF,pcChildDBF,pcParentID,pcChildID,pcParentExpr,pcChildExpr
STORE 0 TO pnParentRec,pnChildRec
IF _triggerlevel=1
  BEGIN TRANSACTION
  PRIVATE pcRIcursors,pcRIwkareas,pcRIolderror,pnerror,;
  pcOldDele,pcOldExact,pcOldTalk,pcOldCompat,PcOldDBC
  pcOldTalk=SET("TALK")
  SET TALK OFF
  pcOldDele=SET("DELETED")
  pcOldExact=SET("EXACT")
  pcOldCompat=SET("COMPATIBLE")
  SET COMPATIBLE OFF
  SET DELETED ON
  SET EXACT OFF
  pcRIcursors=""
  pcRIwkareas=""
  pcRIolderror=ON("error")
  pnerror=0
  ON ERROR pnerror=rierror(ERROR(),message(),message(1),program())
  IF TYPE('gaErrors(1)')<>"U"
    release gaErrors
  ENDIF
  PUBLIC gaErrors(1,12)
  pcOldDBC=DBC()
  SET DATA TO ("SACFADB")
ENDIF first trigger
LOCAL lcChildID && child's value to be sought in parent
LOCAL lcParentWkArea && parentwork area handle returned by riopen
LOCAL lcChildWkArea && child's work area
LOCAL lcStartArea
lcStartArea=select()
llRetVal=.t.
lcChildWkArea=SELECT()
SELECT (lcChildWkArea)
lcChildID=CODPROV
pcChildDBF=dbf(lcChildWkArea)
pnChildRec=recno(lcChildWkArea)
pcChildID=lcChildID
pcChildExpr="CODPROV"
lcParentWkArea=riopen("iprov","codprov")
IF lcParentWkArea<=0
  IF _triggerlevel=1
    DO riend WITH .F.
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN .F.
ENDIF not able to open the child work area
pcParentDBF=dbf(lcParentWkArea)
llRetVal=SEEK(lcChildID,lcParentWkArea)
pnParentRec=recno(lcParentWkArea)
=rireuse("iprov",lcParentWkArea)
IF NOT llRetVal
  DO rierror with -1,"Se ha violado la regla de restricción de inserción.","",""
  IF _triggerlevel=1
    DO riend WITH llRetVal
  ENDIF at the end of the highest trigger level
  SELECT (lcStartArea)
  RETURN llRetVal
ENDIF
IF _triggerlevel=1
  do riend with llRetVal
ENDIF at the end of the highest trigger level
SELECT (lcStartArea)
RETURN llRetVal
** "Fin del desencadenante de insertar integridad referencial para" ventas
********************************************************************************
**__RI_FOOTER!@ Do NOT REMOVE or MODIFY this line!!!! @!__RI_FOOTER**
þòÿ   >
 >
                       ÀF   %   Ë     ¥   ¥Ò         ü  U  «  ®÷  þ T÷  üaýþ %üCêÂð C'
	ñ CS
ýù9 þ T÷  ü-ýþ ù þ %üC'
ýù þ þ %üCû	 BUFFERINGêøýùx þ	 üCêýþ þ T÷  ü÷ ø ýþ þ þ
 Z#üCOýþ	 Bü÷  ýþ U  LLRETVAL PNERRORþ  ¯÷  ÷ ÷ þ ®÷ þ T÷ üaýþ %üCêÂñ CS
ýù@ þ T÷ ü-ýþ ùä þ %üC÷  Î÷ ýùà þ 5÷ þ3 T÷ üCCCÙ tcCascadeParentbÙ Cò Ù  ó ÷ 6fýþ >ü÷  ýÑü÷ ýþ %üCû	 BUFFERINGêøýùË þ	 üCêýþ þ T÷ ü÷ ø ýþ þ þ
 Z#üCOýþ	 Bü÷ ýþ U  TCFIELDNAME
 TCNEWVALUE TCCASCADEPARENT LLRETVAL PCCASCADEPARENT PNERROR' 4÷  ÷ ÷ ÷ þ ®÷ ÷ þ T÷ üCë÷ øÍýþ+ %üCû gaErrors[lnErrorRows,1]bÙ Lýù þ ö ü÷ øýüCë÷ øÍýþ T÷ ü÷ øýþ þ Tö ü÷ ýüøýü÷  ýþ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýüÙ  ýþ T÷ üøýþ +üCC÷ t¡
ýùOþ, Tö ü÷ ýüøýüC ÷ øö Ù ,C÷ týþ T÷ ü÷ øýþ þ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýü÷	 ýþ Tö ü÷ ýüøýü÷
 ýþ Tö ü÷ ýüø	ýü÷ ýþ Tö ü÷ ýüø
ýü÷ ýþ Tö ü÷ ýüøýü÷ ýþ Tö ü÷ ýüøýü÷ ýþ	 Bü÷  ýþ U  TNERRNO	 TCMESSAGE TCCODE	 TCPROGRAM LNERRORROWS LNXX GAERRORS PCPARENTDBF PNPARENTREC
 PCPARENTID PCPARENTEXPR
 PCCHILDDBF
 PNCHILDREC	 PCCHILDID PCCHILDEXPRÃ 4÷  ÷ þ ®÷ ÷ ÷ þ T÷ üC÷  Ù *÷ ¸ýþ %ü÷ ø ýùþ T÷ üCWýþ Fù  þ T÷ üCWýþ %üC÷ ¡
ýù þ% QÂü÷  ý¼üÙ __riCCCWZAýÃü÷ ýþ ù½ þ QÂü÷  ý¼üÙ __riCCCWZAýþ þ %ü÷ ø ýùò þ  T÷ ü÷ C÷  fÙ ?CCWøZýþ ùþ T÷ üø ýþ þ ù²þ! T÷ üCC÷ ÷ C÷  >øø\gýþ5 T÷ üC÷ C÷  fÙ *C÷ øZC÷  fÙ ?C÷ øZ¨ýþ %üC÷ ¡
ýùþ G(ü÷ ý(ü÷ ýþ þ %ü÷ ø ýù®þ T÷ üø ýþ þ þ
 Bü÷ ýþ U  TCTABLE TCORDER LCCURWKAREA LCNEWWKAREA LNINUSESPOT PCRICURSORS PNERROR 4÷  þ ®÷ ÷ ÷ þ %ü÷  ýù( þ ½þ ù@ þ Gþ þ G þ þ %üC÷ ¡ýù[ þ {û  þ ù~ þ ON ERROR &pcRIolderror.
 þ ÷ üøý(üCÙ *÷ ¯ýùÎ þ T÷ üCÙ *÷ ÷ ¸øýþ QüCC÷ ÷ ø\gýþ þ %ü÷ Ù ONýùë þ GA þ þ %ü÷ Ù OFFýù	þ Gþ þ %ü÷ Ù ONýù&þ G þ þ %ü÷	 Ù ONýùCþ G2 þ þ HùTùþ üC÷
 ¡ýùiþ G(þ ü÷
 Cêýùþ G(ü÷
 ýþ þ Büaýþ U 	 TLSUCCESS LNXX LNSPOT
 LCWORKAREA PCRIOLDERROR PCRICURSORS PCOLDCOMPAT	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDDBCJ  4÷  ÷ þ5 T÷ üC÷ C÷  fÙ ?C÷ øZC÷  fÙ *C÷ øZ¨ýþ Büaýþ U  TCTABLENAME TCWKAREA PCRICURSORSÛ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODUFCýþ! T÷ üCÙ auxcombÙ codufcö ýþ %ü÷ ø ýùÍþ %üí=øýùÂþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùFþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODUFCýþ T÷  üCö ýþ þ üCÙ auxcomb ÷ ö ýþ %ü÷  
ýù¢þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÁþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODUFC RIOPEN RIEND RIDELETE RIREUSE ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþB %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù MAQUINAS
ýùMþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODMAQê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ %ü÷ ÷ ýùIþ" T÷ üCÙ maquinasÙ codmaqö ýþ %ü÷ ø ýùeþ %üí=øýùPþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ maquinas ÷ ö ýþ %ü÷  
ýùEþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù.þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùyþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U   LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODMAQ RIOPEN RIEND RIREUSE RIERROR  ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ" T÷ üCÙ maquinasÙ codmaqö ýþ %ü÷ ø ýùçþ %üí=øýùÒþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ maquinas ÷ ö ýþ %ü÷  
ýùÇþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù°þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùæþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODMAQ RIOPEN RIEND RIREUSE RIERROR ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ@ %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù INSUMO
ýùMþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODINSUMê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODINSUMýþ %ü÷ ÷ ýùIþ" T÷ üCÙ insumoÙ codinsumö ýþ %ü÷ ø ýùgþ %üí=øýùRþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ insumo ÷ ö ýþ %ü÷  
ýùEþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù.þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þA %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UNDCOMP
ýùYþ
 Fü÷ ýþ T÷ ü÷  ýþ T÷ üCÙ CODUNIDê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODUNIDýþ %ü÷ ÷ ýùUþ! T÷ üCÙ undcompÙ codigoö ýþ %ü÷ ø ýùrþ %üí=øýù]þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ undcomp ÷ ö ýþ %ü÷  
ýùQþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù:þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U!  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODINSUM RIOPEN RIEND RIREUSE RIERROR CODUNID ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODINSUMýþ" T÷ üCÙ insumoÙ codinsumö ýþ %ü÷ ø ýùéþ %üí=øýùÔþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ insumo ÷ ö ýþ %ü÷  
ýùÇþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù°þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODUNIDýþ! T÷ üCÙ undcompÙ codigoö ýþ %ü÷ ø ýùþ %üí=øýùnþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ undcomp ÷ ö ýþ %ü÷  
ýùbþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùKþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODINSUM RIOPEN RIEND RIREUSE RIERROR CODUNIDÐ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODCPýþ T÷ üCÙ cpdÙ codcpö ýþ %ü÷ ø ýùÇþ %üí=øýù¼þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù?þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODCPýþ T÷  üCö ýþ þ üCÙ cpd ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù¶þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODCP RIOPEN RIEND RIDELETE RIREUSE2 ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODCPê_ýþ T÷ ü÷ ýþ T÷ üÙ CODCPýþ T÷ ü÷ ýþ %ü÷ ÷ ýùùþ T÷ üCÙ cpdö ýþ %ü÷ ø ýùþ %üí=øýùøþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODCPýþ %ü÷  
ýùyþ !þ þ  T÷  üCÙ CODCP ÷ Ù CPGö ýþ þ üCÙ cpd ÷ ö ýþ %ü÷  
ýùõþ %üí=øýùÞþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA CODCP RIOPEN RIEND RIUPDATE RIREUSEà ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODCREDýþ# T÷ üCÙ dcreditoÙ codcredö ýþ %ü÷ ø ýùÐþ %üí=øýùÅþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùJþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODCREDýþ T÷  üCö ýþ þ üCÙ dcredito ÷ ö ýþ %ü÷  
ýù§þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÆþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODCRED RIOPEN RIEND RIDELETE RIREUSEY ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UBICA
ýùDþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODFINê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷ ÷ ýù@þ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýù_þ %üí=øýùJþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýù<þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù%þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODCREDê_ýþ T÷ ü÷ ýþ T÷ üÙ CODCREDýþ T÷ ü÷  ýþ %ü÷ ÷ ýù þ T÷ üCÙ dcreditoö ýþ %ü÷ ø ýù'þ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷  ÷ ýù¿þ T÷ üCOýþ T÷ ü÷  ýþ T÷ üÙ CODCREDýþ %ü÷  
ýùþ !þ þ& T÷  üCÙ CODCRED ÷ Ù CREDITOö! ýþ þ üCÙ dcredito ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù?þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U"  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODFIN RIOPEN RIEND RIREUSE RIERROR CODCRED RIUPDATEú ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùäþ %üí=øýùÏþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýùÁþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùªþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùàþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODFIN RIOPEN RIEND RIREUSE RIERRORæ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ
 CODCULTIVOýþ# T÷ üCÙ infcultiÙ codcultö ýþ %ü÷ ø ýùÓþ %üí=øýùÈþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùPþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ
 CODCULTIVOýþ T÷  üCö ýþ þ üCÙ infculti ÷ ö ýþ %ü÷  
ýù­þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÌþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA
 CODCULTIVO RIOPEN RIEND RIDELETE RIREUSET ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ
 CODCULTIVOê_ýþ T÷ ü÷ ýþ T÷ üÙ
 CODCULTIVOýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ infcultiö ýþ %ü÷ ø ýùþ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùºþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ
 CODCULTIVOýþ %ü÷  
ýùþ !þ þ) T÷  üCÙ
 CODCULTIVO ÷ Ù CULTIVOö ýþ þ üCÙ infculti ÷ ö ýþ %ü÷  
ýùþ %üí=øýù þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù:þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA
 CODCULTIVO RIOPEN RIEND RIUPDATE RIREUSE ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþA %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù CREDITO
ýùMþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODCREDê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODCREDýþ %ü÷ ÷ ýùIþ" T÷ üCÙ creditoÙ codcredö ýþ %ü÷ ø ýùfþ %üí=øýùQþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ credito ÷ ö ýþ %ü÷  
ýùEþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù.þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùyþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U   LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODCRED RIOPEN RIEND RIREUSE RIERROR  ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODCREDýþ" T÷ üCÙ creditoÙ codcredö ýþ %ü÷ ø ýùèþ %üí=øýùÓþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ credito ÷ ö ýþ %ü÷  
ýùÇþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù°þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùæþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODCRED RIOPEN RIEND RIREUSE RIERROR ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UBICA
ýùDþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODFINê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷ ÷ ýù@þ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýù_þ %üí=øýùJþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýù<þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù%þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùpþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U   LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODFIN RIOPEN RIEND RIREUSE RIERRORú ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùäþ %üí=øýùÏþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýùÁþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùªþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùàþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODFIN RIOPEN RIEND RIREUSE RIERRORç ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ
 NUMCONTROLýþ% T÷ üCÙ procionÙ
 numcontrolö ýþ %ü÷ ø ýùÕþ %üí=øýùÊþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùRþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ
 NUMCONTROLýþ T÷  üCö ýþ þ üCÙ procion ÷ ö ýþ %ü÷  
ýù®þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÍþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA
 NUMCONTROL RIOPEN RIEND RIDELETE RIREUSE ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþA %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù CULTIVO
ýùVþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ
 CODCULTIVOê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ
 CODCULTIVOýþ %ü÷ ÷ ýùRþ% T÷ üCÙ cultivoÙ
 codcultivoö ýþ %ü÷ ø ýùoþ %üí=øýùZþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ cultivo ÷ ö ýþ %ü÷  
ýùNþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù7þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þB %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù LOTESFIN
ýùfþ
 Fü÷ ýþ T÷ ü÷  ýþ T÷ üCÙ CODLOTEê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODLOTEýþ %ü÷ ÷ ýùbþ# T÷ üCÙ lotesfinÙ codloteö ýþ %ü÷ ø ýù~þ %üí=øýùiþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ lotesfin ÷ ö ýþ %ü÷  
ýù^þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùGþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ
 NUMCONTROLê_ýþ T÷ ü÷ ýþ T÷ üÙ
 NUMCONTROLýþ T÷ ü÷! ýþ %ü÷ ÷ ýùMþ T÷ üCÙ procionö ýþ %ü÷ ø ýùNþ %üí=øýù9þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷! ÷ ýùíþ T÷ üCOýþ T÷ ü÷! ýþ T÷ üÙ
 NUMCONTROLýþ %ü÷  
ýù¿þ !þ þ* T÷  üCÙ
 NUMCONTROL ÷ Ù INFCULTIö" ýþ þ üCÙ procion ÷ ö ýþ %ü÷  
ýùIþ %üí=øýù2þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýùlþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U#  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT
 CODCULTIVO RIOPEN RIEND RIREUSE RIERROR CODLOTE
 NUMCONTROL RIUPDATE¤ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ
 CODCULTIVOýþ% T÷ üCÙ cultivoÙ
 codcultivoö ýþ %ü÷ ø ýùîþ %üí=øýùÙþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ cultivo ÷ ö ýþ %ü÷  
ýùÍþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù¶þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODLOTEýþ# T÷ üCÙ lotesfinÙ codloteö ýþ %ü÷ ø ýùþ %üí=øýùvþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ lotesfin ÷ ö ýþ %ü÷  
ýùkþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùTþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA
 CODCULTIVO RIOPEN RIEND RIREUSE RIERROR CODLOTEá ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODINSAPýþ# T÷ üCÙ auxapliÙ codinsapö ýþ %ü÷ ø ýùÑþ %üí=øýùÆþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùLþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODINSAPýþ T÷  üCö ýþ þ üCÙ auxapli ÷ ö ýþ %ü÷  
ýù¨þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÇþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODINSAP RIOPEN RIEND RIDELETE RIREUSEL ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODINSAPê_ýþ T÷ ü÷ ýþ T÷ üÙ CODINSAPýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ auxapliö ýþ %ü÷ ø ýùþ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù³þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODINSAPýþ %ü÷  
ýùþ !þ þ) T÷  üCÙ CODINSAP ÷ Ù	 INSAPLICAö ýþ þ üCÙ auxapli ÷ ö ýþ %ü÷  
ýùþ %üí=øýùøþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù2þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA CODINSAP RIOPEN RIEND RIUPDATE RIREUSEV ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODINSUMýþ# T÷ üCÙ compinsÙ codinsumö ýþ %ü÷ ø ýùÑþ %üí=øýùÆþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùLþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODINSUMýþ T÷  üCö ýþ þ üCÙ compins ÷ ö ýþ %ü÷  
ýù¨þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODINSUMýþ T÷ üCÙ ufcÙ codinsumö ýþ %ü÷ ø ýùJþ %üí=øýù?þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùÅþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODINSUMýþ T÷  üCö ýþ þ üCÙ ufc ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù<þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODINSUM RIOPEN RIEND RIDELETE RIREUSE+ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþA %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù TIPINSU
ýùMþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODTIPOê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODTIPOýþ %ü÷ ÷ ýùIþ" T÷ üCÙ tipinsuÙ codtipoö ýþ %ü÷ ø ýùfþ %üí=øýùQþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ tipinsu ÷ ö ýþ %ü÷  
ýùEþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù.þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODINSUMê_ýþ T÷ ü÷ ýþ T÷ üÙ CODINSUMýþ T÷ ü÷  ýþ %ü÷ ÷ ýù*þ T÷ üCÙ compinsö ýþ %ü÷ ø ýù1þ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷  ÷ ýùÊþ T÷ üCOýþ T÷ ü÷  ýþ T÷ üÙ CODINSUMýþ %ü÷  
ýù þ !þ þ& T÷  üCÙ CODINSUM ÷ Ù INSUMOö! ýþ þ üCÙ compins ÷ ö ýþ %ü÷  
ýù&þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODINSUMê_ýþ T÷ ü÷ ýþ T÷ üÙ CODINSUMýþ T÷ ü÷  ýþ %ü÷ ÷ ýùòþ T÷ üCÙ ufcö ýþ %ü÷ ø ýùýþ %üí=øýùèþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷  ÷ ýùþ T÷ üCOýþ T÷ ü÷  ýþ T÷ üÙ CODINSUMýþ %ü÷  
ýùlþ !þ þ& T÷  üCÙ CODINSUM ÷ Ù INSUMOö! ýþ þ üCÙ ufc ÷ ö ýþ %ü÷  
ýùîþ %üí=øýù×þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U"  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODTIPO RIOPEN RIEND RIREUSE RIERROR CODINSUM RIUPDATE  ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODTIPOýþ" T÷ üCÙ tipinsuÙ codtipoö ýþ %ü÷ ø ýùèþ %üí=øýùÓþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ tipinsu ÷ ö ýþ %ü÷  
ýùÇþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù°þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùæþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODTIPO RIOPEN RIEND RIREUSE RIERROR ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UBICA
ýùDþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODFINê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷ ÷ ýù@þ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýù_þ %üí=øýùJþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýù<þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù%þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùpþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U   LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODFIN RIOPEN RIEND RIREUSE RIERRORú ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùäþ %üí=øýùÏþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýùÁþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùªþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùàþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODFIN RIOPEN RIEND RIREUSE RIERRORN ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODPROVýþ# T÷ üCÙ jorcultiÙ codprovö ýþ %ü÷ ø ýùÐþ %üí=øýùÅþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùJþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ T÷  üCö ýþ þ üCÙ jorculti ÷ ö ýþ %ü÷  
ýù§þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODPROVýþ! T÷ üCÙ ventasÙ codprovö ýþ %ü÷ ø ýùJþ %üí=øýù?þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùÄþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ T÷  üCö ýþ þ üCÙ ventas ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODPROVýþ" T÷ üCÙ maqmantÙ codprovö ýþ %ü÷ ø ýùÃþ %üí=øýù¸þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù=þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ T÷  üCö ýþ þ üCÙ maqmant ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODPROVýþ# T÷ üCÙ labcultiÙ codprovö ýþ %ü÷ ø ýù>þ %üí=øýù3þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù¸þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ T÷  üCö ýþ þ üCÙ labculti ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù4þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODPROV RIOPEN RIEND RIDELETE RIREUSE§	 ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODPROVê_ýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ jorcultiö ýþ %ü÷ ø ýùþ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù¬þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ %ü÷  
ýùþ !þ þ$ T÷  üCÙ CODPROV ÷ Ù IPROVö ýþ þ üCÙ jorculti ÷ ö ýþ %ü÷  
ýù	þ %üí=øýùòþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODPROVê_ýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ T÷ ü÷ ýþ %ü÷ ÷ ýùÖþ T÷ üCÙ ventasö ýþ %ü÷ ø ýùáþ %üí=øýùÌþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùwþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ %ü÷  
ýùOþ !þ þ$ T÷  üCÙ CODPROV ÷ Ù IPROVö ýþ þ üCÙ ventas ÷ ö ýþ %ü÷  
ýùÒþ %üí=øýù»þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODPROVê_ýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ T÷ ü÷ ýþ %ü÷ ÷ ýù¡þ T÷ üCÙ maqmantö ýþ %ü÷ ø ýù«þ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùAþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ %ü÷  
ýùþ !þ þ$ T÷  üCÙ CODPROV ÷ Ù IPROVö ýþ þ üCÙ maqmant ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODPROVê_ýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ T÷ ü÷ ýþ %ü÷ ÷ ýùn	þ T÷ üCÙ labcultiö ýþ %ü÷ ø ýùwþ %üí=øýùbþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù	þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ %ü÷  
ýùåþ !þ þ$ T÷  üCÙ CODPROV ÷ Ù IPROVö ýþ þ üCÙ labculti ÷ ö ýþ %ü÷  
ýùj	þ %üí=øýùS	þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù	þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA CODPROV RIOPEN RIEND RIUPDATE RIREUSE ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù IPROV
ýùGþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODPROVê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ %ü÷ ÷ ýùCþ  T÷ üCÙ iprovÙ codprovö ýþ %ü÷ ø ýùbþ %üí=øýùMþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ iprov ÷ ö ýþ %ü÷  
ýù?þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù(þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù LABOR
ýùQþ
 Fü÷ ýþ T÷ ü÷  ýþ T÷ üCÙ CODLABORê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ %ü÷ ÷ ýùMþ! T÷ üCÙ laborÙ codlaborö ýþ %ü÷ ø ýùlþ %üí=øýùWþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ labor ÷ ö ýþ %ü÷  
ýùIþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù2þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýù}þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U!  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODPROV RIOPEN RIEND RIREUSE RIERROR CODLABOR ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ  T÷ üCÙ iprovÙ codprovö ýþ %ü÷ ø ýùæþ %üí=øýùÑþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ iprov ÷ ö ýþ %ü÷  
ýùÃþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù¬þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ! T÷ üCÙ laborÙ codlaborö ýþ %ü÷ ø ýùþ %üí=øýùkþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ labor ÷ ö ýþ %ü÷  
ýù]þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùFþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù|þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODPROV RIOPEN RIEND RIREUSE RIERROR CODLABOR ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù LABOR
ýùJþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODLABORê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ %ü÷ ÷ ýùFþ! T÷ üCÙ laborÙ codlaborö ýþ %ü÷ ø ýùeþ %üí=øýùPþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ labor ÷ ö ýþ %ü÷  
ýùBþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù+þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù IPROV
ýùQþ
 Fü÷ ýþ T÷ ü÷  ýþ T÷ üCÙ CODPROVê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ %ü÷ ÷ ýùMþ  T÷ üCÙ iprovÙ codprovö ýþ %ü÷ ø ýùlþ %üí=øýùWþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ iprov ÷ ö ýþ %ü÷  
ýùIþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù2þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýù}þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U!  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODLABOR RIOPEN RIEND RIREUSE RIERROR CODPROV ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ! T÷ üCÙ laborÙ codlaborö ýþ %ü÷ ø ýùèþ %üí=øýùÓþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ labor ÷ ö ýþ %ü÷  
ýùÅþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù®þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ  T÷ üCÙ iprovÙ codprovö ýþ %ü÷ ø ýùþ %üí=øýùkþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ iprov ÷ ö ýþ %ü÷  
ýù]þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùFþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù|þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODLABOR RIOPEN RIEND RIREUSE RIERROR CODPROVá ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODLABORýþ$ T÷ üCÙ labcultiÙ codlaborö ýþ %ü÷ ø ýùÒþ %üí=øýùÇþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùMþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ T÷  üCö ýþ þ üCÙ labculti ÷ ö ýþ %ü÷  
ýùªþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODLABORýþ$ T÷ üCÙ jorcultiÙ codlaborö ýþ %ü÷ ø ýùQþ %üí=øýùFþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùÌþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ T÷  üCö ýþ þ üCÙ jorculti ÷ ö ýþ %ü÷  
ýù)þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODLABORýþ$ T÷ üCÙ maqcultiÙ codlaborö ýþ %ü÷ ø ýùÐþ %üí=øýùÅþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùKþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ T÷  üCö ýþ þ üCÙ maqculti ÷ ö ýþ %ü÷  
ýù¨þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÇþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODLABOR RIOPEN RIEND RIDELETE RIREUSEì ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODLABORê_ýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ labcultiö ýþ %ü÷ ø ýùþ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù°þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ %ü÷  
ýùþ !þ þ% T÷  üCÙ CODLABOR ÷ Ù LABORö ýþ þ üCÙ labculti ÷ ö ýþ %ü÷  
ýùþ %üí=øýùöþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODLABORê_ýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ T÷ ü÷ ýþ %ü÷ ÷ ýùâþ T÷ üCÙ jorcultiö ýþ %ü÷ ø ýùéþ %üí=øýùÔþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ %ü÷  
ýùXþ !þ þ% T÷  üCÙ CODLABOR ÷ Ù LABORö ýþ þ üCÙ jorculti ÷ ö ýþ %ü÷  
ýùÞþ %üí=øýùÇþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODLABORê_ýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ T÷ ü÷ ýþ %ü÷ ÷ ýù³þ T÷ üCÙ maqcultiö ýþ %ü÷ ø ýùºþ %üí=øýù¥þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùRþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ %ü÷  
ýù)þ !þ þ% T÷  üCÙ CODLABOR ÷ Ù LABORö ýþ þ üCÙ maqculti ÷ ö ýþ %ü÷  
ýù¯þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýùÒþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA CODLABOR RIOPEN RIEND RIUPDATE RIREUSEà ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODLOTEýþ# T÷ üCÙ infcultiÙ codloteö ýþ %ü÷ ø ýùÐþ %üí=øýùÅþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùJþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODLOTEýþ T÷  üCö ýþ þ üCÙ infculti ÷ ö ýþ %ü÷  
ýù§þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÆþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODLOTE RIOPEN RIEND RIDELETE RIREUSEZ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UBICA
ýùDþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODFINê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷ ÷ ýù@þ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýù_þ %üí=øýùJþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýù<þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù%þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODLOTEê_ýþ T÷ ü÷ ýþ T÷ üÙ CODLOTEýþ T÷ ü÷  ýþ %ü÷ ÷ ýù!þ T÷ üCÙ infcultiö ýþ %ü÷ ø ýù'þ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷  ÷ ýùÀþ T÷ üCOýþ T÷ ü÷  ýþ T÷ üÙ CODLOTEýþ %ü÷  
ýùþ !þ þ' T÷  üCÙ CODLOTE ÷ Ù LOTESFINö! ýþ þ üCÙ infculti ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù@þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U"  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODFIN RIOPEN RIEND RIREUSE RIERROR CODLOTE RIUPDATEú ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùäþ %üí=øýùÏþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýùÁþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùªþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùàþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODFIN RIOPEN RIEND RIREUSE RIERROR ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù LABOR
ýùJþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODLABORê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ %ü÷ ÷ ýùFþ! T÷ üCÙ laborÙ codlaborö ýþ %ü÷ ø ýùeþ %üí=øýùPþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ labor ÷ ö ýþ %ü÷  
ýùBþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù+þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þB %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù MAQUINAS
ýùWþ
 Fü÷ ýþ T÷ ü÷  ýþ T÷ üCÙ CODMAQê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ %ü÷ ÷ ýùSþ" T÷ üCÙ maquinasÙ codmaqö ýþ %ü÷ ø ýùoþ %üí=øýùZþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ maquinas ÷ ö ýþ %ü÷  
ýùOþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù8þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U!  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODLABOR RIOPEN RIEND RIREUSE RIERROR CODMAQ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODLABORýþ! T÷ üCÙ laborÙ codlaborö ýþ %ü÷ ø ýùèþ %üí=øýùÓþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ labor ÷ ö ýþ %ü÷  
ýùÅþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù®þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ" T÷ üCÙ maquinasÙ codmaqö ýþ %ü÷ ø ýùþ %üí=øýùlþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ maquinas ÷ ö ýþ %ü÷  
ýùaþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùJþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODLABOR RIOPEN RIEND RIREUSE RIERROR CODMAQ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþB %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù MAQUINAS
ýùMþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODMAQê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ %ü÷ ÷ ýùIþ" T÷ üCÙ maquinasÙ codmaqö ýþ %ü÷ ø ýùeþ %üí=øýùPþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ maquinas ÷ ö ýþ %ü÷  
ýùEþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù.þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù IPROV
ýùTþ
 Fü÷ ýþ T÷ ü÷  ýþ T÷ üCÙ CODPROVê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ %ü÷ ÷ ýùPþ  T÷ üCÙ iprovÙ codprovö ýþ %ü÷ ø ýùoþ %üí=øýùZþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ iprov ÷ ö ýþ %ü÷  
ýùLþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù5þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U!  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODMAQ RIOPEN RIEND RIREUSE RIERROR CODPROV ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ" T÷ üCÙ maquinasÙ codmaqö ýþ %ü÷ ø ýùçþ %üí=øýùÒþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ maquinas ÷ ö ýþ %ü÷  
ýùÇþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù°þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ  T÷ üCÙ iprovÙ codprovö ýþ %ü÷ ø ýùþ %üí=øýùmþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ iprov ÷ ö ýþ %ü÷  
ýù_þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùHþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù~þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODMAQ RIOPEN RIEND RIREUSE RIERROR CODPROVà ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODTMAQýþ# T÷ üCÙ maquinasÙ codtmaqö ýþ %ü÷ ø ýùÐþ %üí=øýùÅþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùJþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODTMAQýþ T÷  üCö ýþ þ üCÙ maquinas ÷ ö ýþ %ü÷  
ýù§þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÆþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODTMAQ RIOPEN RIEND RIDELETE RIREUSEH ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODTMAQê_ýþ T÷ ü÷ ýþ T÷ üÙ CODTMAQýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ maquinasö ýþ %ü÷ ø ýùþ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù®þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODTMAQýþ %ü÷  
ýùþ !þ þ& T÷  üCÙ CODTMAQ ÷ Ù MAQTIPOö ýþ þ üCÙ maquinas ÷ ö ýþ %ü÷  
ýùþ %üí=øýùôþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù.þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA CODTMAQ RIOPEN RIEND RIUPDATE RIREUSEË ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODMAQýþ! T÷ üCÙ maqmantÙ codmaqö ýþ %ü÷ ø ýùÍþ %üí=øýùÂþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùFþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ T÷  üCö ýþ þ üCÙ maqmant ÷ ö ýþ %ü÷  
ýù¢þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODMAQýþ! T÷ üCÙ combustÙ codmaqö ýþ %ü÷ ø ýùDþ %üí=øýù9þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù½þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ T÷  üCö ýþ þ üCÙ combust ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODMAQýþ" T÷ üCÙ maqcultiÙ codmaqö ýþ %ü÷ ø ýù¼þ %üí=øýù±þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù5þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ T÷  üCö ýþ þ üCÙ maqculti ÷ ö ýþ %ü÷  
ýùþ %üí=øýù{þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù±þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODMAQ RIOPEN RIEND RIDELETE RIREUSE÷ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþA %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù MAQTIPO
ýùMþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODTMAQê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODTMAQýþ %ü÷ ÷ ýùIþ" T÷ üCÙ maqtipoÙ codtmaqö ýþ %ü÷ ø ýùfþ %üí=øýùQþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ maqtipo ÷ ö ýþ %ü÷  
ýùEþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù.þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UBICA
ýùQþ
 Fü÷ ýþ T÷ ü÷  ýþ T÷ üCÙ CODFINê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷ ÷ ýùMþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùlþ %üí=øýùWþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýùIþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù2þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODMAQê_ýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ T÷ ü÷! ýþ %ü÷ ÷ ýù(þ T÷ üCÙ maqmantö ýþ %ü÷ ø ýù1þ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷! ÷ ýùÈþ T÷ üCOýþ T÷ ü÷! ýþ T÷ üÙ CODMAQýþ %ü÷  
ýùþ !þ þ& T÷  üCÙ CODMAQ ÷ Ù MAQUINASö" ýþ þ üCÙ maqmant ÷ ö ýþ %ü÷  
ýù$þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODMAQê_ýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ T÷ ü÷! ýþ %ü÷ ÷ ýùò	þ T÷ üCÙ combustö ýþ %ü÷ ø ýùûþ %üí=øýùæþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷! ÷ ýù	þ T÷ üCOýþ T÷ ü÷! ýþ T÷ üÙ CODMAQýþ %ü÷  
ýùh	þ !þ þ& T÷  üCÙ CODMAQ ÷ Ù MAQUINASö" ýþ þ üCÙ combust ÷ ö ýþ %ü÷  
ýùî	þ %üí=øýù×	þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODMAQê_ýþ T÷ ü÷ ýþ T÷ üÙ CODMAQýþ T÷ ü÷! ýþ %ü÷ ÷ ýù¾þ T÷ üCÙ maqcultiö ýþ %ü÷ ø ýùÆ
þ %üí=øýù±
þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷! ÷ ýù]þ T÷ üCOýþ T÷ ü÷! ýþ T÷ üÙ CODMAQýþ %ü÷  
ýù3þ !þ þ& T÷  üCÙ CODMAQ ÷ Ù MAQUINASö" ýþ þ üCÙ maqculti ÷ ö ýþ %ü÷  
ýùºþ %üí=øýù£þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýùÝþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U#  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODTMAQ RIOPEN RIEND RIREUSE RIERROR CODFIN CODMAQ RIUPDATE ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODTMAQýþ" T÷ üCÙ maqtipoÙ codtmaqö ýþ %ü÷ ø ýùèþ %üí=øýùÓþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ maqtipo ÷ ö ýþ %ü÷  
ýùÇþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù°þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùþ %üí=øýùkþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýù]þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùFþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù|þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODTMAQ RIOPEN RIEND RIREUSE RIERROR CODFIN ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UBICA
ýùDþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODFINê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷ ÷ ýù@þ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýù_þ %üí=øýùJþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýù<þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù%þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùpþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U   LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODFIN RIOPEN RIEND RIREUSE RIERRORú ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùäþ %üí=øýùÏþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýùÁþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùªþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùàþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODFIN RIOPEN RIEND RIREUSE RIERROR ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþB %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù INFCULTI
ýùYþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ
 NUMCONTROLê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ
 NUMCONTROLýþ %ü÷ ÷ ýùUþ& T÷ üCÙ infcultiÙ
 numcontrolö ýþ %ü÷ ø ýùqþ %üí=øýù\þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ infculti ÷ ö ýþ %ü÷  
ýùQþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù:þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U   LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT
 NUMCONTROL RIOPEN RIEND RIREUSE RIERROR ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ
 NUMCONTROLýþ& T÷ üCÙ infcultiÙ
 numcontrolö ýþ %ü÷ ø ýùïþ %üí=øýùÚþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ infculti ÷ ö ýþ %ü÷  
ýùÏþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù¸þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùîþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA
 NUMCONTROL RIOPEN RIEND RIREUSE RIERRORÜ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODTIPOýþ! T÷ üCÙ insumoÙ codtipoö ýþ %ü÷ ø ýùÎþ %üí=øýùÃþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùHþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODTIPOýþ T÷  üCö ýþ þ üCÙ insumo ÷ ö ýþ %ü÷  
ýù£þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÂþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODTIPO RIOPEN RIEND RIDELETE RIREUSED ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODTIPOê_ýþ T÷ ü÷ ýþ T÷ üÙ CODTIPOýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ insumoö ýþ %ü÷ ø ýùþ %üí=øýùÿþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù¬þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODTIPOýþ %ü÷  
ýùþ !þ þ& T÷  üCÙ CODTIPO ÷ Ù TIPINSUö ýþ þ üCÙ insumo ÷ ö ýþ %ü÷  
ýùþ %üí=øýùðþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù*þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA CODTIPO RIOPEN RIEND RIUPDATE RIREUSE¡ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODFINýþ" T÷ üCÙ lotesfinÙ codfinö ýþ %ü÷ ø ýùÎþ %üí=øýùÃþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùGþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷  üCö ýþ þ üCÙ lotesfin ÷ ö ýþ %ü÷  
ýù¤þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODFINýþ! T÷ üCÙ creditoÙ codfinö ýþ %ü÷ ø ýùFþ %üí=øýù;þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù¿þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷  üCö ýþ þ üCÙ credito ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODFINýþ  T÷ üCÙ facinsÙ codfinö ýþ %ü÷ ø ýù¼þ %üí=øýù±þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù5þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷  üCö ýþ þ üCÙ facins ÷ ö ýþ %ü÷  
ýùþ %üí=øýùyþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODFINýþ" T÷ üCÙ inveniniÙ codfinö ýþ %ü÷ ø ýù3þ %üí=øýù(þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù¬þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷  üCö ýþ þ üCÙ invenini ÷ ö ýþ %ü÷  
ýù	þ %üí=øýùòþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODFINýþ" T÷ üCÙ maquinasÙ codfinö ýþ %ü÷ ø ýù¬þ %üí=øýù¡þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù%	þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷  üCö ýþ þ üCÙ maquinas ÷ ö ýþ %ü÷  
ýù	þ %üí=øýùk	þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODFINýþ T÷ üCÙ ufcÙ codfinö ýþ %ü÷ ø ýù 
þ %üí=øýù
þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù
þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷  üCö ýþ þ üCÙ ufc ÷ ö ýþ %ü÷  
ýùñ
þ %üí=øýùÚ
þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODFINýþ! T÷ üCÙ metereoÙ codfinö ýþ %ü÷ ø ýùþ %üí=øýùþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷  üCö ýþ þ üCÙ metereo ÷ ö ýþ %ü÷  
ýùhþ %üí=øýùQþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODFIN RIOPEN RIEND RIDELETE RIREUSEæ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODFINê_ýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ ü÷ ýþ %ü÷ ÷ ýù	þ T÷ üCÙ lotesfinö ýþ %ü÷ ø ýùþ %üí=øýùÿþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù¨þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷  
ýùþ !þ þ# T÷  üCÙ CODFIN ÷ Ù UBICAö ýþ þ üCÙ lotesfin ÷ ö ýþ %ü÷  
ýùþ %üí=øýùîþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODFINê_ýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ ü÷ ýþ %ü÷ ÷ ýùÐþ T÷ üCÙ creditoö ýþ %ü÷ ø ýùÜþ %üí=øýùÇþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùpþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷  
ýùIþ !þ þ# T÷  üCÙ CODFIN ÷ Ù UBICAö ýþ þ üCÙ credito ÷ ö ýþ %ü÷  
ýùÌþ %üí=øýùµþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODFINê_ýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ facinsö ýþ %ü÷ ø ýù¢þ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù6þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷  
ýùþ !þ þ# T÷  üCÙ CODFIN ÷ Ù UBICAö ýþ þ üCÙ facins ÷ ö ýþ %ü÷  
ýùþ %üí=øýùzþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODFINê_ýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ ü÷ ýþ %ü÷ ÷ ýù^	þ T÷ üCÙ inveniniö ýþ %ü÷ ø ýùiþ %üí=øýùTþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùýþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷  
ýùÖþ !þ þ# T÷  üCÙ CODFIN ÷ Ù UBICAö ýþ þ üCÙ invenini ÷ ö ýþ %ü÷  
ýùZ	þ %üí=øýùC	þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODFINê_ýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ ü÷ ýþ %ü÷ ÷ ýù'þ T÷ üCÙ maquinasö ýþ %ü÷ ø ýù2
þ %üí=øýù
þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùÆ
þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷  
ýù
þ !þ þ# T÷  üCÙ CODFIN ÷ Ù UBICAö ýþ þ üCÙ maquinas ÷ ö ýþ %ü÷  
ýù#þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODFINê_ýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ ü÷ ýþ %ü÷ ÷ ýùæþ T÷ üCÙ ufcö ýþ %ü÷ ø ýùöþ %üí=øýùáþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷  
ýùcþ !þ þ# T÷  üCÙ CODFIN ÷ Ù UBICAö ýþ þ üCÙ ufc ÷ ö ýþ %ü÷  
ýùâþ %üí=øýùËþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODFINê_ýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ ü÷ ýþ %ü÷ ÷ ýù­þ T÷ üCÙ metereoö ýþ %ü÷ ø ýù¹þ %üí=øýù¤þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýùMþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷  
ýù&þ !þ þ# T÷  üCÙ CODFIN ÷ Ù UBICAö ýþ þ üCÙ metereo ÷ ö ýþ %ü÷  
ýù©þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýùÌþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA CODFIN RIOPEN RIEND RIUPDATE RIREUSEÙ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODUFCýþ  T÷ üCÙ auxufcÙ codufcö ýþ %ü÷ ø ýùÌþ %üí=øýùÁþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùEþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODUFCýþ T÷  üCö ýþ þ üCÙ auxufc ÷ ö ýþ %ü÷  
ýù þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù¿þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODUFC RIOPEN RIEND RIDELETE RIREUSE£ ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ@ %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù INSUMO
ýùMþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODINSUMê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODINSUMýþ %ü÷ ÷ ýùIþ" T÷ üCÙ insumoÙ codinsumö ýþ %ü÷ ø ýùgþ %üí=øýùRþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ insumo ÷ ö ýþ %ü÷  
ýùEþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù.þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þA %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UNDCOMP
ýùYþ
 Fü÷ ýþ T÷ ü÷  ýþ T÷ üCÙ CODUNIDê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODUNIDýþ %ü÷ ÷ ýùUþ! T÷ üCÙ undcompÙ codigoö ýþ %ü÷ ø ýùrþ %üí=øýù]þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ undcomp ÷ ö ýþ %ü÷  
ýùQþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù:þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UBICA
ýù]þ
 Fü÷ ýþ T÷ ü÷! ýþ T÷ üCÙ CODFINê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ %ü÷ ÷ ýùYþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùxþ %üí=øýùcþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýùUþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù>þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U"  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODINSUM RIOPEN RIEND RIREUSE RIERROR CODUNID CODFIN1 ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODINSUMýþ" T÷ üCÙ insumoÙ codinsumö ýþ %ü÷ ø ýùéþ %üí=øýùÔþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ insumo ÷ ö ýþ %ü÷  
ýùÇþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù°þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODUNIDýþ! T÷ üCÙ undcompÙ codigoö ýþ %ü÷ ø ýùþ %üí=øýùnþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ undcomp ÷ ö ýþ %ü÷  
ýùbþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùKþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODFINýþ T÷ üCÙ ubicaÙ codfinö ýþ %ü÷ ø ýùþ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ ubica ÷ ö ýþ %ü÷  
ýùøþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýùáþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODINSUM RIOPEN RIEND RIREUSE RIERROR CODUNID CODFINN ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODIGOýþ" T÷ üCÙ compinsÙ codunidö ýþ %ü÷ ø ýùÎþ %üí=øýùÃþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùHþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODUNIDýþ T÷  üCö ýþ þ üCÙ compins ÷ ö ýþ %ü÷  
ýù¤þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ CODIGOýþ T÷ üCÙ ufcÙ codunidö ýþ %ü÷ ø ýùCþ %üí=øýù8þ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýù½þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ CODUNIDýþ T÷  üCö ýþ þ üCÙ ufc ÷ ö ýþ %ü÷  
ýùþ %üí=øýùþþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýù4þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA CODIGO RIOPEN RIEND CODUNID RIDELETE RIREUSE* ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþB %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù UNDMEDIS
ýùVþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ	 CODUNIDADê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ	 CODUNIDADýþ %ü÷ ÷ ýùRþ% T÷ üCÙ undmedisÙ	 codunidadö ýþ %ü÷ ø ýùnþ %üí=øýùYþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ undmedis ÷ ö ýþ %ü÷  
ýùNþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù7þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODIGOê_ýþ T÷ ü÷ ýþ T÷ üÙ CODIGOýþ T÷ ü÷  ýþ %ü÷ ÷ ýù.þ T÷ üCÙ compinsö ýþ %ü÷ ø ýù6þ %üí=øýù!þ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷! ÷ ýùÎþ T÷ üCOýþ T÷ ü÷! ýþ T÷ üÙ CODUNIDýþ %ü÷  
ýù¤þ !þ þ& T÷  üCÙ CODUNID ÷ Ù UNDCOMPö" ýþ þ üCÙ compins ÷ ö ýþ %ü÷  
ýù*þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ CODIGOê_ýþ T÷ ü÷ ýþ T÷ üÙ CODIGOýþ T÷ ü÷  ýþ %ü÷ ÷ ýùñþ T÷ üCÙ ufcö ýþ %ü÷ ø ýùýþ %üí=øýùèþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷! ÷ ýùþ T÷ üCOýþ T÷ ü÷! ýþ T÷ üÙ CODUNIDýþ %ü÷  
ýùkþ !þ þ& T÷  üCÙ CODUNID ÷ Ù UNDCOMPö" ýþ þ üCÙ ufc ÷ ö ýþ %ü÷  
ýùíþ %üí=øýùÖþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U#  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT	 CODUNIDAD RIOPEN RIEND RIREUSE RIERROR CODIGO CODUNID RIUPDATE ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ	 CODUNIDADýþ% T÷ üCÙ undmedisÙ	 codunidadö ýþ %ü÷ ø ýùíþ %üí=øýùØþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ undmedis ÷ ö ýþ %ü÷  
ýùÍþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù¶þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùìþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA	 CODUNIDAD RIOPEN RIEND RIREUSE RIERRORä ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ Jü÷ ý(÷ ÷ þ T÷ üÙ	 CODUNIDADýþ$ T÷ üCÙ undcompÙ	 codunidadö ýþ %ü÷ ø ýùÓþ %üí=øýùÈþ ÷ Ñü-ýþ þ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ	 Eü÷ ýþ ~+ü÷ ÷ ð ÷  	ýùOþ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ	 CODUNIDADýþ T÷  üCö ýþ þ üCÙ undcomp ÷ ö ýþ %ü÷  
ýù«þ %üí=øýùþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùÊþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCCHILDWKAREA LCPARENTWKAREA LLDELHEADERAREA LCSTARTAREA	 CODUNIDAD RIOPEN RIEND RIDELETE RIREUSEO ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ üC&ýþ T÷ üCOýþ T÷ üCÙ	 CODUNIDADê_ýþ T÷ ü÷ ýþ T÷ üÙ	 CODUNIDADýþ T÷ ü÷ ýþ %ü÷ ÷ ýùþ T÷ üCÙ undcompö ýþ %ü÷ ø ýùþ %üí=øýùþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ
 Fü÷ ýþ ~ü÷ ÷ ýù¶þ T÷ üCOýþ T÷ ü÷ ýþ T÷ üÙ	 CODUNIDADýþ %ü÷  
ýùþ !þ þ) T÷  üCÙ	 CODUNIDAD ÷ Ù UNDMEDISö ýþ þ üCÙ undcomp ÷ ö ýþ %ü÷  
ýùþ %üí=øýùûþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ %üí=øýù5þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA	 CODUNIDAD RIOPEN RIEND RIUPDATE RIREUSE ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ? %üí=øñ CÙ pccascadeparentbÙ Cñ ÷ Ù IPROV
ýùGþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üCÙ CODPROVê_ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ %ü÷ ÷ ýùCþ  T÷ üCÙ iprovÙ codprovö ýþ %ü÷ ø ýùbþ %üí=øýùMþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ iprov ÷ ö ýþ %ü÷  
ýù?þS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù(þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ þ þ T÷ ü÷ ýþ %üí=øýùsþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U   LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS
 LCPARENTID LCOLDPARENTID LCCHILDWKAREA	 LCCHILDID LCOLDCHILDID LCPARENTWKAREA LCSTARTAREA PCCASCADEPARENT CODPROV RIOPEN RIEND RIREUSE RIERRORü ®÷  þ T÷  üaýþ 5÷ ÷ ÷ ÷ ÷ ÷ þ 5÷ ÷ þ! JüÙ  ý(÷ ÷ ÷ ÷ ÷ ÷ þ Jüø ý(÷ ÷ þ %üí=øýùìþ ½þ' 5÷	 ÷
 ÷ ÷ ÷ ÷ ÷ ÷ ÷ þ T÷ üCÙ TALKvýþ G2þ T÷ üCÙ DELETEDvýþ T÷ üCÙ EXACTvýþ T÷ üCÙ
 COMPATIBLEvýþ GAþ G þ Gþ T÷	 üÙ  ýþ T÷
 üÙ  ýþ T÷ üCÙ errorêýþ T÷ üø ýþ? 1û7 pnerror=rierror(ERROR(),message(),message(1),program())þ %üCû gaErrors(1)bÙ Uýùµþ <÷ þ þ 7ö üøýüøýþ T÷ üCêýþ G(üÙ SACFADBýþ þ ®÷ þ ®÷ þ ®÷ þ ®÷ þ T÷ üCWýþ T÷  üaýþ T÷ üCWýþ
 Fü÷ ýþ T÷ ü÷ ýþ T÷ üC÷ &ýþ T÷ üC÷ Oýþ T÷ ü÷ ýþ T÷ üÙ CODPROVýþ  T÷ üCÙ iprovÙ codprovö ýþ %ü÷ ø ýùæþ %üí=øýùÑþ ÷ Ñü-ýþ þ
 Fü÷ ýþ Bü-ýþ þ T÷ üC÷ &ýþ T÷  üC÷ ÷ ýþ T÷ üC÷ Oýþ üCÙ iprov ÷ ö ýþ %ü÷  
ýùÃþS ÷ ÑüùÿÿýüÙ3 Se ha violado la regla de restricción de inserción.ýüÙ  ýüÙ  ýþ %üí=øýù¬þ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ þ %üí=øýùâþ ÷ Ñ÷  þ þ
 Fü÷ ýþ	 Bü÷  ýþ U  LLRETVAL PCPARENTDBF PNPARENTREC
 PCCHILDDBF
 PNCHILDREC
 PCPARENTID	 PCCHILDID PCPARENTEXPR PCCHILDEXPR PCRICURSORS PCRIWKAREAS PCRIOLDERROR PNERROR	 PCOLDDELE
 PCOLDEXACT	 PCOLDTALK PCOLDCOMPAT PCOLDDBC GAERRORS	 LCCHILDID LCPARENTWKAREA LCCHILDWKAREA LCSTARTAREA CODPROV RIOPEN RIEND RIREUSE RIERROR RIDELETE,     ÿÿ RIUPDATEî     ÿÿ rierror>    ÿÿ riopen    ÿÿ riend'    ÿÿ rireuse8	    ÿÿ __RI_DELETE_combustª	    ÿÿ __RI_UPDATE_combustÞ    ÿÿ __RI_INSERT_combustñ    ÿÿ __RI_UPDATE_compins7    ÿÿ __RI_INSERT_compinsa"    ÿÿ __RI_DELETE_cpgM)    ÿÿ __RI_UPDATE_cpgu.    ÿÿ __RI_DELETE_credito4    ÿÿ __RI_UPDATE_creditoP9    ÿÿ __RI_INSERT_credito<A    ÿÿ __RI_DELETE_cultivo|F    ÿÿ __RI_UPDATE_cultivo¿K    ÿÿ __RI_UPDATE_dcreditoQ    ÿÿ __RI_INSERT_dcreditoW    ÿÿ __RI_UPDATE_facinsâ\    ÿÿ __RI_INSERT_facinsìb    ÿÿ __RI_DELETE_infculti,h    ÿÿ __RI_UPDATE_infcultipm    ÿÿ __RI_INSERT_infcultiw    ÿÿ __RI_DELETE_insaplica~    ÿÿ __RI_UPDATE_insaplicaÌ    ÿÿ __RI_DELETE_insumo    ÿÿ __RI_UPDATE_insumo;    ÿÿ __RI_INSERT_insumoû    ÿÿ __RI_UPDATE_inveniniB    ÿÿ __RI_INSERT_inveniniL¥    ÿÿ __RI_DELETE_iprovª    ÿÿ __RI_UPDATE_iprov4´    ÿÿ __RI_UPDATE_jorcultiL¿    ÿÿ __RI_INSERT_jorcultinÇ    ÿÿ __RI_UPDATE_labcultiUÎ    ÿÿ __RI_INSERT_labcultiwÖ    ÿÿ __RI_DELETE_labor^Ý    ÿÿ __RI_UPDATE_laborå    ÿÿ __RI_DELETE_lotesfinøî    ÿÿ __RI_UPDATE_lotesfin2ô    ÿÿ __RI_INSERT_lotesfinü    ÿÿ __RI_UPDATE_maqculti_   ÿÿ __RI_INSERT_maqculti	   ÿÿ __RI_UPDATE_maqmantp   ÿÿ __RI_INSERT_maqmant   ÿÿ __RI_DELETE_maqtipoz   ÿÿ __RI_UPDATE_maqtipo´$   ÿÿ __RI_DELETE_maquinasm*   ÿÿ __RI_UPDATE_maquinas2   ÿÿ __RI_INSERT_maquinas#@   ÿÿ __RI_UPDATE_metereoG   ÿÿ __RI_INSERT_metereoM   ÿÿ __RI_UPDATE_procionRR   ÿÿ __RI_INSERT_procionuX   ÿÿ __RI_DELETE_tipinsuÇ]   ÿÿ __RI_UPDATE_tipinsuýb   ÿÿ __RI_DELETE_ubica²h   ÿÿ __RI_UPDATE_ubica¬v   ÿÿ __RI_DELETE_ufc   ÿÿ __RI_UPDATE_ufc4   ÿÿ __RI_INSERT_ufcj   ÿÿ __RI_DELETE_undcompô   ÿÿ __RI_UPDATE_undcomp¤¥   ÿÿ __RI_INSERT_undcompl¯   ÿÿ __RI_DELETE_undmedis»´   ÿÿ __RI_UPDATE_undmedisû¹   ÿÿ __RI_UPDATE_ventas½¿   ÿÿ __RI_INSERT_ventasËÅ   ÿÿ3 q ± Á±  Ñ A Ñ A A A ¡  2 ñ q ± A±  1q 1Ñ A A A ¡  2 1± 1±ÑA Ñ 1ÂA  3 ± ñ qÁ  Á R áA  Ñ A  R1A Ñ A A ¡ 3 q ñ Ñ Q  a A a A ñ   ±A Ñ¡QA 1a A Aa A 1a A 1a A Ñ ñ a Á A q 3 ² Rq 4 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á 1± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á !¡ Ñ añ ñ Ñ 1!± A ¡ q A ñ !ñ á 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ 1!± A ¡ q A ñ !ñ á 1± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Ñ ñ ñ Ñ Q!± A ¡ q A ñ !ñ qá 1± A ¡  A A A ¡ Ñ qñ ñ Ñ A± A ¡ q A ñ !ñ á 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ Q!± A ¡ q A ñ !ñ qá 1± A ¡  A ¡ Ñ ñ ñ Ñ A± A ¡ q A ñ !ñ á 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á !Á± A q A ñ ¡  Á Ñ !á A Aá ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á QÑ !Ñ A± A ¡ q A ñ ¡ !Á Ñ !á A A A Aá ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á A1± A q A ñ ¡  Á Ñ Aá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ añ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ¡ Á Á qÑ AÑ ± A ¡ q A ñ ¡ !Á Ñ Aá A A aA á ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á q1± A q A ñ ¡  Á Ñ qá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á ¡Ñ qÑ ± A ¡ q A ñ ¡ !Á Ñ qá A A A á ± A ¡  A A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Ñ qñ ñ Ñ A!± A ¡ q A ñ !ñ á 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ A!± A ¡ q A ñ !ñ á 1± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ añ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á qQ± A q A ñ ¡  Á Ñ qá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Ñ ¡ñ ñ Ñ qQ± A ¡ q A ñ !ñ á 1± A ¡  A A A !¡ Ñ qñ ñ Ñ A1± A ¡ q A ñ !ñ á 1± A ¡  A A A Ñ ¡ Á Á ¡Ñ qÑ ± A ¡ q A ñ ¡ !Á Ñ qá A A ¡A á ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ qQ± A ¡ q A ñ !ñ á 1± A ¡  A ¡ Ñ ñ ñ Ñ A1± A ¡ q A ñ !ñ á 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á Q1± A q A ñ ¡  Á Ñ Qá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á Ñ QÑ ± A ¡ q A ñ ¡ !Á Ñ Qá A A A á ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á Q1± A q A ñ ¡  Á Ñ Qá A á ± A ¡  A ¡ Á Á Qñ± A q A ñ ¡  Á Ñ Qá A Aá ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Ñ qñ ñ Ñ A!± A ¡ q A ñ !ñ á 1± A ¡  A A A Ñ ¡ Á Á Ñ QÑ ± A ¡ q A ñ ¡ !Á Ñ Qá A A aA á ± A ¡  A A ¡ Á Á Ñ QÑ A± A ¡ q A ñ ¡ !Á Ñ Qá A A aA Aá ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ A!± A ¡ q A ñ !ñ á 1± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ añ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á A1± A q A ñ ¡  Á Ñ Aá A á ± A ¡  A ¡ Á Á A± A q A ñ ¡  Á Ñ Aá A qá ± A ¡  A ¡ Á Á A!± A q A ñ ¡  Á Ñ Aá A á ± A ¡  A ¡ Á Á A1± A q A ñ ¡  Á Ñ Aá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á qÑ AÑ ± A ¡ q A ñ ¡ !Á Ñ Aá A A AA á ± A ¡  A A ¡ Á Á qÑ AÑ q± A ¡ q A ñ ¡ !Á Ñ Aá A A AA qá ± A ¡  A A ¡ Á Á qÑ AÑ ± A ¡ q A ñ ¡ !Á Ñ Aá A A AA á ± A ¡  A A ¡ Á Á qÑ AÑ ± A ¡ q A ñ ¡ !Á Ñ Aá A A AA á ± A ¡  A A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ qñ ñ Ñ A± A ¡ q A ñ !ñ aá 1± A ¡  A A A ñ¡ Ñ ñ ñ Ñ Q± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ A± A ¡ q A ñ !ñ aá 1± A ¡  A ¡ Ñ ñ ñ Ñ Q± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ ñ ñ Ñ Q± A ¡ q A ñ !ñ aá 1± A ¡  A A A ñ¡ Ñ qñ ñ Ñ A± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ Q± A ¡ q A ñ !ñ aá 1± A ¡  A ¡ Ñ ñ ñ Ñ A± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á QA± A q A ñ ¡  Á Ñ Qá A á ± A ¡  A ¡ Á Á QA± A q A ñ ¡  Á Ñ Qá A á ± A ¡  A ¡ Á Á QA± A q A ñ ¡  Á Ñ Qá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á Ñ QÑ ± A ¡ q A ñ ¡ !Á Ñ Qá A A QA á ± A ¡  A A ¡ Á Á Ñ QÑ ± A ¡ q A ñ ¡ !Á Ñ Qá A A QA á ± A ¡  A A ¡ Á Á Ñ QÑ ± A ¡ q A ñ ¡ !Á Ñ Qá A A QA á ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á A1± A q A ñ ¡  Á Ñ Aá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ añ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ¡ Á Á qÑ AÑ ± A ¡ q A ñ ¡ !Á Ñ Aá A A qA á ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ ñ ñ Ñ Q± A ¡ q A ñ !ñ aá 1± A ¡  A A A !¡ Ñ añ ñ Ñ 1!± A ¡ q A ñ !ñ á 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ Q± A ¡ q A ñ !ñ aá 1± A ¡  A ¡ Ñ ñ ñ Ñ 1!± A ¡ q A ñ !ñ á 1± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á !¡ Ñ añ ñ Ñ 1!± A ¡ q A ñ !ñ á 1± A ¡  A A A ñ¡ Ñ qñ ñ Ñ A± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ 1!± A ¡ q A ñ !ñ á 1± A ¡  A ¡ Ñ ñ ñ Ñ A± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á A1± A q A ñ ¡  Á Ñ Aá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á qÑ AÑ ± A ¡ q A ñ ¡ !Á Ñ Aá A A aA á ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á 1± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ¡ Á Á 1± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ¡ Á Á 1!± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Ñ qñ ñ Ñ A!± A ¡ q A ñ !ñ á 1± A ¡  A A A ñ¡ Ñ añ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ 1á A A aA á ± A ¡  A A ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ 1á A A aA á ± A ¡  A A ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ 1á A A aA á ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ A!± A ¡ q A ñ !ñ á 1± A ¡  A ¡ Ñ ñ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ añ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á !¡ Ñ ¡ñ ñ Ñ qa± A ¡ q A ñ !ñ á 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ qa± A ¡ q A ñ !ñ á 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á A± A q A ñ ¡  Á Ñ Aá A qá ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á qÑ AÑ q± A ¡ q A ñ ¡ !Á Ñ Aá A A aA qá ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á 1!± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ¡ Á Á 1± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ¡ Á Á 1± A q A ñ ¡  Á Ñ 1á A qá ± A ¡  A ¡ Á Á 1!± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ¡ Á Á 1!± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ¡ Á Á 1Ñ± A q A ñ ¡  Á Ñ 1á A Aá ± A ¡  A ¡ Á Á 1± A q A ñ ¡  Á Ñ 1á A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ 1á A A 1A á ± A ¡  A A ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ 1á A A 1A á ± A ¡  A A ¡ Á Á aÑ 1Ñ q± A ¡ q A ñ ¡ !Á Ñ 1á A A 1A qá ± A ¡  A A ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ 1á A A 1A á ± A ¡  A A ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ 1á A A 1A á ± A ¡  A A ¡ Á Á aÑ 1Ñ A± A ¡ q A ñ ¡ !Á Ñ 1á A A 1A Aá ± A ¡  A A ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ 1á A A 1A á ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á 1± A q A ñ ¡  Á Ñ 1á A qá ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Ñ ñ ñ Ñ Q!± A ¡ q A ñ !ñ qá 1± A ¡  A A A ¡ Ñ qñ ñ Ñ A± A ¡ q A ñ !ñ á 1± A ¡  A A A ñ¡ Ñ añ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ Q!± A ¡ q A ñ !ñ qá 1± A ¡  A ¡ Ñ ñ ñ Ñ A± A ¡ q A ñ !ñ á 1± A ¡  A ¡ Ñ ñ ñ Ñ 1ñ± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á 1!± A q A ñ ¡  Á Ñ Aá A á ± A ¡  A ¡ Á Á 1á± A q A ñ ¡  Á Ñ Aá A Aá ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á !¡ Ñ ñ ñ Ñ aQ± A ¡ q A ñ !ñ á 1± A ¡  A A A Ñ ¡ Á Á aÑ 1Ñ ± A ¡ q A ñ ¡ !Á Ñ Aá A A aA á ± A ¡  A A ¡ Á Á aÑ 1Ñ A± A ¡ q A ñ ¡ !Á Ñ Aá A A aA Aá ± A ¡  A A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ aQ± A ¡ q A ñ !ñ á 1± A ¡  A ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Á Á aA± A q A ñ ¡  Á Ñ aá A á ± A ¡  A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ¡ Á Á Ñ aÑ ± A ¡ q A ñ ¡ !Á Ñ aá A A A á ± A ¡  A A ± A ¡  5 r ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q q q q Á ± Á ñ¡ Ñ qñ ñ Ñ A± A ¡ q A ñ !ñ aá 1± A ¡  A A A Ñ ± A ¡  6 q ± ±± Q r1a aAa a a Ñ Ñ QÑ ññq A 1Ñ 1A q q q q Á ± Á ¡ Ñ ñ ñ Ñ A± A ¡ q A ñ !ñ aá 1± A ¡  A ± A ¡  3                    ]           µ  ó     $     1  (   >   E    E   [   %  ¸  f      Í          8  '     Ì   H  ê#  ã     $  -  7  ]  (-  '=    É  H=  I  ó  '  µI  R  W  n  «R  £]  £  ¿  Ä]  ¼f  û    Ýf  mv  G  w  v  É  ¿  »  ê  ñ  	        U  S  %  Ê  ¬     ì  ê¨     ä  
©  ´  I  1  ½´  ø½    u  ¾  "Ç  ç  ¼  DÇ  dÛ  3  L  Û  èç  Ê  ª  è  ñ  .  ñ  +ñ  Uü  z  B  uü   Ò  ¦  ¢ / ;  ;  O K% ×    m% 1  	  Ì  (1 b: t	  	  : ÂL ¾	  ®	  áL c a
  k
  ¸c ¯s $  ×
  Ñs Ü   5  þ õ ú  ¡   e m  ÿ   Ä« Ñ    ã« ¿ W    &¿ È ÷  `  AÈ Õ× C  Ñ  ÷× îà »    á ñ     1ñ ?ý w  ß  `ý X Ú  K  y È M  ©  é á" ±  ð  # $. ý  A  F. _= U  Â  = NY Û    pY ye º  ø  e 0q   E  Qq Gz q    hz  º  Ö  ;      ©  X  a  ¼ Õ£ ¤  ²  ô£ M¿ ü  §  l¿ â ö  Ð  $â ë &    )ë nÿ r  ¢  ÿ æ         ~  & °. ë    Ñ. 8   W  >8 @A Ñ    bA LL   ï  lL X t  <  #X a È   )   >
                 